{"version":3,"sources":["webpack:///scripts.js","webpack:///webpack/bootstrap aba67758cf5c4808fd8f","webpack:///./src/js/services/API.js","webpack:///./src/js/services/DataStore.js","webpack:///./src/js/services/CustomEvent.js","webpack:///./src/js/PinPreview.js","webpack:///./src/js/services/Analytics.js","webpack:///./src/js/main.js","webpack:///./~/bullet-pubsub/dist/bullet.js","webpack:///./~/debounce/index.js","webpack:///./~/mousetrap/mousetrap.js","webpack:///./~/packing-ajax/index.js","webpack:///./~/type-of/index.js","webpack:///./src/js/services/AJAX.js","webpack:///./src/js/services/ErrorUtil.js","webpack:///./src/js/views/Application.js","webpack:///./src/js/views/Authorization.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","_classCallCheck","instance","Constructor","TypeError","_extends","assign","target","arguments","length","source","key","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","_AJAX","_AJAX2","_DataStore","_DataStore2","API","this","Get","DATA__ACCESS_TOKEN","Promise","resolve","reject","PDK","init","appId","cookie","login","scope","_ref","session","setSession","Post","data","then","catch","access_token","_ref2","sort","a","b","nameA","toUpperCase","nameB","DataStore","window","localStorage","setItem","getItem","removeItem","_bulletPubsub","_bulletPubsub2","CustomEvent","eventName","callback","on","off","once","undefined","trigger","_ErrorUtil","_ErrorUtil2","_Analytics","_Analytics2","_API","_API2","PinPreview","file","split","pop","join","actionMenuTrigger","querySelector","actionMenu","note","link","_this","addEventListener","e","isActionMenuVisible","hidePreviewActions","showPreviewActions","dataset","action","setNote","classList","add","remove","contains","pinned","template","document","getElementById","importNode","content","reader","FileReader","onload","theFile","previewContainer","previewImage","src","result","toggle","abort","readAsDataURL","_this2","imageData","board","pinError","CreatePin","image_base64","response","PinCreated","err","Log","Error","error","severity","exception","metaData","details","Analytics","FireEvent","event_category","shortcutName","featureName","eventAction","eventOptions","DATA__IS_ADMIN","gtag","_Authorization","_Authorization2","_Application","_Application2","_CustomEvent","_CustomEvent2","navigator","userAgent","indexOf","match","IsAuthenticated","bugsnagOptions","apiKey","appVersion","releaseStage","notifyReleaseStages","collectUserIp","location","origin","bugsnagClient","bugsnag","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","constructor","Bullet","ParamCountError","methodName","expectedParamsString","paramCount","message","stack","ParamTypeError","parameterName","parameter","expectedType","EventNameLengthError","EventNamesArrayLengthError","UndeclaredEventError","UnmappedEventError","_runCallback","id","_mappings","callbacks","callbackObject","cb","_self","_cloneCallbacks","clonedCallbacks","callbackName","_deleteAllCallbackReferencesForEvent","_CALLBACK_NAMESPACE","totalEvents","_deleteAllCallbackReferences","_strictMode","_triggerAsync","_errors","events","_getMappings","clonedMappings","mapping","totalCallbacks","fn","callbackId","fnToRemove","replaceCallback","oldFn","newFn","replaceAllCallbacks","setTimeout","addEventName","addMultipleEventNames","eventNames","Array","currentEventName","removeEventName","getStrictMode","setStrictMode","useStrictMode","getTriggerAsync","setTriggerAsync","useAsync","func","wait","immediate","later","last","Date","now","timestamp","timeout","apply","context","args","debounced","callNow","clear","clearTimeout","flush","_addEvent","type","attachEvent","_characterFromEvent","character","String","fromCharCode","which","shiftKey","toLowerCase","_MAP","_KEYCODE_MAP","_modifiersMatch","modifiers1","modifiers2","_eventModifiers","modifiers","push","altKey","ctrlKey","metaKey","_preventDefault","preventDefault","returnValue","_stopPropagation","stopPropagation","cancelBubble","_isModifier","_getReverseMap","_REVERSE_MAP","_pickBestAction","_keysFromString","combination","replace","_getKeyInfo","keys","_SPECIAL_ALIASES","_SHIFT_MAP","_belongsTo","element","ancestor","parentNode","Mousetrap","targetElement","_resetSequences","doNotReset","activeSequences","_sequenceLevels","_nextExpectedAction","_getMatches","sequenceName","level","matches","self","_callbacks","seq","deleteCombo","combo","deleteSequence","splice","_fireCallback","sequence","stopCallback","srcElement","_handleKeyEvent","keyCode","_ignoreNextKeyup","handleKey","_resetSequenceTimer","_resetTimer","_bindSequence","_callbackAndReset","isFinal","wrappedCallback","nextAction","_bindSingle","_directMap","info","_ignoreNextKeypress","_handleKey","maxLevel","processedSequenceCallback","Math","max","ignoreThisKeypress","_bindMultiple","combinations","8","9","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","45","46","91","93","224","106","107","109","110","111","186","187","188","189","190","191","192","219","220","221","222","~","!","@","#","$","%","^","&","*","(",")","_","+",":","\"","<",">","?","|","option","command","return","escape","plus","mod","test","platform","toString","bind","unbind","reset","className","tagName","isContentEditable","addKeycodes","documentMousetrap","method","charAt","triggerAndReturn","triggerGlobal","settings","global","ajaxStart","ajax","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","success","ajaxComplete","ajaxError","status","complete","empty","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","url","query","serializeData","options","param","serialize","params","traditional","array","k","v","extend","slice","forEach","jsonpID","blankRE","crossDomain","RegExp","$2","host","dataType","hasPlaceholder","JSONP","abortTimeout","accepts","baseHeaders","protocol","$1","overrideMimeType","contentType","headers","onreadystatechange","readyState","getResponseHeader","responseText","eval","responseXML","JSON","parse","async","open","setRequestHeader","send","script","createElement","head","getElementsByTagName","documentElement","onerror","insertBefore","firstChild","XMLHttpRequest","json","xml","html","text","post","getJSON","encodeURIComponent","val","callee","ex","nodeType","_packingAjax","_packingAjax2","AJAX","baseUrl","apiVersion","endpoint","_buildUrl","_fetch","ErrorUtil","notify","console","_PinPreview","_PinPreview2","_mousetrap","_mousetrap2","_debounce","_debounce2","Application","previewsPinsContainer","imageSelectContainer","refreshBoardsButton","pinsContainer","sendToPinterestButton","sendAllToBoardSelect","fileUploadInput","modalOverlay","clearButton","clearAllButton","pinPreviews","showApplicationContainer","attachListeners","createKeyboardShortcuts","ToggleActionMenu","loadBoards","boards","populateBoardNames","FeatureUsed","clearCompleted","clearAll","pinPreview","validateInputs","createPins","boardValue","updateSelectedBoards","onchange","createPinPreviews","showPrivacyPolicy","hidePrivacyPolicy","hideKeyboardShortcuts","updateStickyPin","stopImmediatePropagation","Remove","DATA__BOARDS","reload","completedPins","querySelectorAll","filter","preview","isPinned","previewPins","elements","innerText","resetSendAllToBoard","_this3","click","KeyboardShortcutUsed","autofillFields","showKeyboardShortcuts","_this4","input","files","windowBreakpoint","abs","getBoundingClientRect","top","appendChild","render","setInstance","forceLoad","Boards","Set","stringify","boardNames","innerHTML","createBoardNameOptionElement","existingBoardNameSelectors","select","newBoard","boardNameSelectors","previews","tabIndex","noteContainer","focus","balloon","tooltip","removeAttribute","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","createPin","noteField","linkField","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","setLink","pageYOffset","show","actionButtons","Authorization","authenticationContainer","authenticationButton","showAuthenticationContainer","Login","accessToken","hideAuthenticationContainer"],"mappings":"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","file":"scripts.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 15);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* Bulk Pinner - Create multiple pins in your Pinterest boards at once\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright (C) 2017 Luke Denton\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\r\nhis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation; either version 3 of the License, or\r\nat your option) any later version.\r\nr\nhis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nor FITNESS FOR A PARTICULAR PURPOSE.  See the\r\neneral Public License for more details.\r\nr\nou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n\nvar _AJAX = __webpack_require__(11);\n\nvar _AJAX2 = _interopRequireDefault(_AJAX);\n\nvar _DataStore = __webpack_require__(1);\n\nvar _DataStore2 = _interopRequireDefault(_DataStore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Class API\r\n *\r\n * Interface for communicating with the API\r\n */\nvar API = function () {\n    function API() {\n        _classCallCheck(this, API);\n    }\n\n    _createClass(API, null, [{\n        key: 'IsAuthenticated',\n\n\n        /**\r\n         * Check if a user has authenticated the application. I.e. an access token exists\r\n         *\r\n         * @returns {boolean}\r\n         */\n        value: function IsAuthenticated() {\n            return _DataStore2.default.Get(_DataStore2.default.DATA__ACCESS_TOKEN()) !== null;\n        }\n\n        /**\r\n         * Initialise the Pinterest SDK and call the login function to get an access token\r\n         * Access token information will be set in the Pinterest SDK, however at the moment\r\n         * the SDK is only used here\r\n         *\r\n         * @returns {Promise}\r\n         */\n\n    }, {\n        key: 'Login',\n        value: function Login() {\n            return new Promise(function (resolve, reject) {\n                PDK.init({\n                    appId: \"4927694653406329461\", // Change this\n                    cookie: true\n                });\n                PDK.login({ scope: 'read_public, write_public' }, function (_ref) {\n                    var session = _ref.session;\n\n                    PDK.setSession(session);\n                    resolve(session);\n                });\n            });\n        }\n\n        /**\r\n         * Get cursor of users' Pins\r\n         *\r\n         * @returns {Promise}\r\n         */\n\n    }, {\n        key: 'Pins',\n        value: function Pins() {\n            return new Promise(function (resolve, reject) {\n                _AJAX2.default.Post('me/pins/', data).then(resolve).catch(reject);\n            });\n        }\n\n        /**\r\n         * Get list of users boards\r\n         *\r\n         * @returns {Promise}\r\n         */\n\n    }, {\n        key: 'Boards',\n        value: function Boards() {\n            return new Promise(function (resolve, reject) {\n                _AJAX2.default.Get('me/boards/', {\n                    access_token: _DataStore2.default.Get(_DataStore2.default.DATA__ACCESS_TOKEN())\n                }, true).then(function (_ref2) {\n                    var data = _ref2.data;\n\n                    data.sort(function (a, b) {\n                        var nameA = a.name.toUpperCase();\n                        var nameB = b.name.toUpperCase();\n                        if (nameA < nameB) {\n                            return -1;\n                        }\n                        if (nameA > nameB) {\n                            return 1;\n                        }\n                        return 0;\n                    });\n\n                    resolve(data);\n                });\n            });\n        }\n\n        /**\r\n         * Send request to Pinterest API to create a new pin\r\n         *\r\n         * @param {Object} data The data to create the pin with\r\n         *\r\n         * @returns {Promise}\r\n         */\n\n    }, {\n        key: 'CreatePin',\n        value: function CreatePin(data) {\n            return new Promise(function (resolve, reject) {\n                _AJAX2.default.Post('pins/', _extends({\n                    access_token: _DataStore2.default.Get(_DataStore2.default.DATA__ACCESS_TOKEN())\n                }, data)).then(resolve).catch(reject);\n            });\n        }\n    }]);\n\n    return API;\n}();\n\nexports.default = API;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\n * Copyright (C) 2017 Luke Denton\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class API\n *\n * Interface for communicating with the API\n */\nvar DataStore = function () {\n    function DataStore() {\n        _classCallCheck(this, DataStore);\n    }\n\n    _createClass(DataStore, null, [{\n        key: 'DATA__ACCESS_TOKEN',\n\n\n        /**\n         * String constant for access token key\n         *\n         * @returns {string}\n         */\n        value: function DATA__ACCESS_TOKEN() {\n            return 'pinterest_accessToken';\n        }\n    }, {\n        key: 'DATA__BOARDS',\n        value: function DATA__BOARDS() {\n            return 'pinterest_boards';\n        }\n    }, {\n        key: 'DATA__IS_ADMIN',\n        value: function DATA__IS_ADMIN() {\n            return 'bulk_pinner_admin';\n        }\n\n        /**\n         * Set value in the data store\n         *\n         * @param {string} key   The identifying key for the value\n         * @param {string} value The value for the identifying key\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'Set',\n        value: function Set(key, value) {\n            window.localStorage.setItem(key, value);\n        }\n\n        /**\n         * Get the value for a given key\n         *\n         * @param {string} key The identifying key for the value\n         *\n         * @returns {string}\n         */\n\n    }, {\n        key: 'Get',\n        value: function Get(key) {\n            return window.localStorage.getItem(key);\n        }\n\n        /**\n         * Remove a local storage key/value\n         *\n         * @param {string} key The identifying key to remove\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'Remove',\n        value: function Remove(key) {\n            return window.localStorage.removeItem(key);\n        }\n    }]);\n\n    return DataStore;\n}();\n\nexports.default = DataStore;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* Bulk Pinner - Create multiple pins in your Pinterest boards at once\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright (C) 2017 Luke Denton\nnhis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * the Free Software Foundation; either version 3 of the License, or\nat your option) any later version.\nnhis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nor FITNESS FOR A PARTICULAR PURPOSE.  See the\neneral Public License for more details.\nnou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\nn\nvar _bulletPubsub = __webpack_require__(6);\n\nvar _bulletPubsub2 = _interopRequireDefault(_bulletPubsub);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class Event\n *\n * Wrapper for the event library chosen, preventing the application from being tightly coupled to the library\n *\n * This class will only be used for custom events. Events like click, hover etc will be handled by vanilla JS handlers\n */\nvar CustomEvent = function () {\n  function CustomEvent() {\n    _classCallCheck(this, CustomEvent);\n  }\n\n  _createClass(CustomEvent, null, [{\n    key: 'on',\n\n\n    /**\n     * Wrapper for the .on event listener\n     *\n     * @param {string}   eventName The name of the event to listen for\n     * @param {function} callback  The function to execute when the event is detected\n     *\n     * @returns {null}\n     */\n    value: function on(eventName, callback) {\n      _bulletPubsub2.default.on(eventName, callback, false);\n    }\n\n    /**\n     * Wrapper for the .off function\n     *\n     * @param {string}   eventName The name of the event to remove\n     * @param {function} callback  [Optional] The function to remove. If the event listener needs to remain for some instances.\n     *\n     * @returns {null}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(eventName, callback) {\n      _bulletPubsub2.default.off(eventName, callback);\n    }\n\n    /**\n     * Wrapper for the .once event listener.\n     * This listener will only be triggered once, and then removed\n     *\n     * @param {string}   eventName The name of the event to listen for\n     * @param {function} callback  The function to execute when event is detected\n     *\n     * @returns {null}\n     */\n\n  }, {\n    key: 'once',\n    value: function once(eventName, callback) {\n      _bulletPubsub2.default.once(eventName, callback);\n    }\n\n    /**\n     * Wrapper for the .trigger function, that will trigger an event\n     *\n     * @param {string} eventName The name of the event to trigger\n     * @param {Object} data      [Optional] Custom data to pass to the event listener callback\n     *\n     * @returns {null}\n     */\n\n  }, {\n    key: 'trigger',\n    value: function trigger(eventName) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _bulletPubsub2.default.trigger(eventName, data);\n    }\n  }]);\n\n  return CustomEvent;\n}();\n\nexports.default = CustomEvent;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* Bulk Pinner - Create multiple pins in your Pinterest boards at once\r\nopyright (C) 2017 Luke Denton\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\r\nhis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation; either version 3 of the License, or\r\nat your option) any later version.\r\nr\nhis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nor FITNESS FOR A PARTICULAR PURPOSE.  See the\r\neneral Public License for more details.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\r\nou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nn\nvar _ErrorUtil = __webpack_require__(12);\n\nvar _ErrorUtil2 = _interopRequireDefault(_ErrorUtil);\n\nvar _Analytics = __webpack_require__(4);\n\nvar _Analytics2 = _interopRequireDefault(_Analytics);\n\nvar _API = __webpack_require__(0);\n\nvar _API2 = _interopRequireDefault(_API);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Class PinPreview\r\n */\nvar PinPreview = function () {\n    function PinPreview(file) {\n        _classCallCheck(this, PinPreview);\n\n        this.file = file;\n\n        var name = this.file.name.split('.');\n        // Remove the extension from the filename array\n        name.pop();\n        // Re-join the remaining elements in the filename array, in case the filename itself had other fullstops in it\n        this.name = name.join('.');\n    }\n\n    /**\r\n     * Save the instance of the pin preview element that has been imported into the DOM\r\n     *\r\n     * @param instance\r\n     *\r\n     * @returns {PinPreview}\r\n     */\n\n\n    _createClass(PinPreview, [{\n        key: 'setInstance',\n        value: function setInstance(instance) {\n            this.instance = instance;\n            this.actionMenuTrigger = this.instance.querySelector('.preview-action-btn');\n            this.actionMenu = this.instance.querySelector('.preview-actions');\n            this.note = this.instance.querySelector('#note');\n            this.link = this.instance.querySelector('.link');\n\n            return this;\n        }\n\n        /**\r\n         * Attach event listeners to various elements in the Pin Preview\r\n         *\r\n         * @returns {null}\r\n         */\n\n    }, {\n        key: 'attachListeners',\n        value: function attachListeners() {\n            var _this = this;\n\n            // Event listener to show/hide the actions menu\n            this.actionMenuTrigger.addEventListener('click', function (e) {\n                if (!_this.isActionMenuVisible()) {\n                    _this.showPreviewActions();\n                } else {\n                    _this.hidePreviewActions();\n                }\n            });\n\n            // Event listener to populate the note with the name of the file being pinned\n            this.actionMenu.querySelector('.preview-action').addEventListener('click', function (e) {\n                switch (e.target.dataset.action) {\n                    case 'filename':\n                        _this.setNote(_this.name);\n                        break;\n                }\n            });\n        }\n\n        /**\r\n         * Show the preview actions menu for the current Pin Preview\r\n         *\r\n         * @returns {null}\r\n         */\n\n    }, {\n        key: 'showPreviewActions',\n        value: function showPreviewActions() {\n            this.actionMenu.classList.add('is-visible');\n        }\n\n        /**\r\n         * Hide the preview actions menu for the current Pin Preview\r\n         *\r\n         * @returns {null}\r\n         */\n\n    }, {\n        key: 'hidePreviewActions',\n        value: function hidePreviewActions() {\n            this.actionMenu.classList.remove('is-visible');\n        }\n\n        /**\r\n         * Determine if the action menu for this PinPreview class is showing\r\n         *\r\n         * @returns {boolean}\r\n         */\n\n    }, {\n        key: 'isActionMenuVisible',\n        value: function isActionMenuVisible() {\n            return this.actionMenu.classList.contains('is-visible');\n        }\n\n        /**\r\n         * Determine if this pin preview has been sent to Pinterest\r\n         *\r\n         * @returns {boolean}\r\n         */\n\n    }, {\n        key: 'isPinned',\n        value: function isPinned() {\n            return !!this.instance.dataset.pinned || false;\n        }\n\n        /**\r\n         * Set value for the note textarea\r\n         *\r\n         * @param {string} value The new value for the note\r\n         *\r\n         * @returns {null}\r\n         */\n\n    }, {\n        key: 'setNote',\n        value: function setNote(value) {\n            this.note.value = value;\n        }\n\n        /**\r\n         * Set value for link\r\n         *\r\n         * @param {string} link The value to be set for the link field\r\n         *\r\n         * @returns {null}\r\n         */\n\n    }, {\n        key: 'setLink',\n        value: function setLink(link) {\n            this.link.value = link;\n        }\n\n        /**\r\n         * Render a pin preview template instance\r\n         *\r\n         * @returns {Node}\r\n         */\n\n    }, {\n        key: 'render',\n        value: function render() {\n            var template = document.getElementById('preview-template');\n            var instance = document.importNode(template.content, true);\n\n            var reader = new FileReader();\n\n            reader.onload = function (theFile) {\n                var previewContainer = theFile.querySelector('.preview-container');\n                var previewImage = previewContainer.querySelector(\".preview-image\");\n\n                return function (e) {\n                    previewImage.src = e.target.result;\n                    previewImage.classList.toggle('loaded', true);\n                };\n            }(instance);\n\n            reader.abort();\n            reader.readAsDataURL(this.file);\n\n            return instance;\n        }\n\n        /**\r\n         * Send request to Pinterest to pin this image\r\n         *\r\n         * @returns {null}\r\n         */\n\n    }, {\n        key: 'createPin',\n        value: function createPin() {\n            var _this2 = this;\n\n            var imageData = this.instance.querySelector('.preview-image').src;\n            var note = this.instance.querySelector(\".note\").value;\n            var board = this.instance.querySelector(\".board-names\").value;\n            var link = this.instance.querySelector(\".link\").value;\n\n            this.instance.classList.toggle('sending', true);\n            if (typeof this.instance.dataset.pinError !== 'undefined') {\n                delete this.instance.dataset.pinError; // Remove any previous error that might be displaying\n            }\n\n            try {\n                _API2.default.CreatePin({\n                    board: board, // Sending just the board ID. Documentation doesn't say this can be done, but it works. Reason is: spaces in board names\n                    image_base64: imageData,\n                    note: note,\n                    link: link\n                }).then(function (response) {\n                    _this2.instance.dataset.pinned = true;\n                    _this2.instance.classList.toggle('sending', false);\n                    _Analytics2.default.PinCreated();\n                }).catch(function (err) {\n                    _ErrorUtil2.default.Log(new Error('Create Pin promise rejected'), {\n                        error: err,\n                        severity: 'error'\n                    });\n                });\n            } catch (exception) {\n                _ErrorUtil2.default.Log(new Error('Exception thrown from CreatePin function'), {\n                    metaData: {\n                        'details': exception\n                    },\n                    severity: 'error'\n                });\n            }\n        }\n    }]);\n\n    return PinPreview;\n}();\n\nexports.default = PinPreview;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* Bulk Pinner - Create multiple pins in your Pinterest boards at once\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright (C) 2017 Luke Denton\r\nr\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * This program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation; either version 3 of the License, or\r\nat your option) any later version.\r\nr\nhis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\neneral Public License for more details.\r\nr\nou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nn\nvar _DataStore = __webpack_require__(1);\n\nvar _DataStore2 = _interopRequireDefault(_DataStore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Class Analytics\r\n */\nvar Analytics = function () {\n    function Analytics() {\n        _classCallCheck(this, Analytics);\n    }\n\n    _createClass(Analytics, null, [{\n        key: 'PinCreated',\n\n\n        /**\r\n         * Perform analytics tracking actions relative to a pin being created\r\n         *\r\n         * @returns {null}\r\n         */\n        value: function PinCreated() {\n            Analytics.FireEvent('pin_created', {\n                'event_category': 'pins'\n            });\n        }\n\n        /**\r\n         * Fire an event to help track which features are used\r\n         *\r\n         * @param {string} shortcutName The label of the shortcut that was used\r\n         *\r\n         * @returns {null}\r\n         */\n\n    }, {\n        key: 'KeyboardShortcutUsed',\n        value: function KeyboardShortcutUsed(shortcutName) {\n            Analytics.FireEvent(shortcutName, {\n                'event_category': 'keyboard_shortcuts'\n            });\n        }\n\n        /**\r\n         * Fire an event to help track which features are used\r\n         *\r\n         * @param {string} featureName The label of the feature that was used\r\n         *\r\n         * @returns {null}\r\n         */\n\n    }, {\n        key: 'FeatureUsed',\n        value: function FeatureUsed(featureName) {\n            Analytics.FireEvent(featureName, {\n                'event_category': 'features'\n            });\n        }\n\n        /**\r\n         * Fire an event on Google Analytics\r\n         *\r\n         * @param {string} eventAction  The 'action' of the event to creation\r\n         * @param {Object} eventOptions Extra options to send with the event action\r\n         *\r\n         * @returns {null}\r\n         */\n\n    }, {\n        key: 'FireEvent',\n        value: function FireEvent(eventAction, eventOptions) {\n            if (_DataStore2.default.Get(_DataStore2.default.DATA__IS_ADMIN) === null) {\n                gtag('event', eventAction, eventOptions);\n            }\n        }\n    }]);\n\n    return Analytics;\n}();\n\nexports.default = Analytics;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _Authorization = __webpack_require__(14);\n\nvar _Authorization2 = _interopRequireDefault(_Authorization);\n\nvar _Application = __webpack_require__(13);\n\nvar _Application2 = _interopRequireDefault(_Application);\n\nvar _API = __webpack_require__(0);\n\nvar _API2 = _interopRequireDefault(_API);\n\nvar _CustomEvent = __webpack_require__(2);\n\nvar _CustomEvent2 = _interopRequireDefault(_CustomEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// If the user is using Internet Explorer, kindly let them know that their browser is out of date, and that they should update\n/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\n * Copyright (C) 2017 Luke Denton\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nif (window.navigator.userAgent.indexOf(\"MSIE\") > 0 || !!navigator.userAgent.match(/Trident\\/7\\./)) {\n    document.querySelector('body').classList.add('no-scroll');\n    document.querySelector('.modal-overlay').classList.remove('hidden');\n    document.querySelector('.modal-overlay').classList.add('ie-overlay');\n    document.querySelector('.modal-overlay').querySelector('.internet-explorer-disabled').classList.remove('hidden');\n} else {\n    // Create instances of application classes\n    new _Authorization2.default();\n    new _Application2.default();\n\n    // Determine if used is logged in and publish appropriate status\n    if (!_API2.default.IsAuthenticated()) {\n        _CustomEvent2.default.trigger('user-not-authenticated');\n    } else {\n        _CustomEvent2.default.trigger('user-authenticated');\n    }\n\n    var bugsnagOptions = {\n        apiKey: '856ea8cf87049704dbad28042ef0aa16',\n        appVersion: '0.5.5',\n        releaseStage: 'production',\n        notifyReleaseStages: ['production', 'staging'],\n        collectUserIp: false\n    };\n\n    if (window.location.origin !== 'https://bulkpinner.github.io') {\n        bugsnagOptions.releaseStage = 'developer';\n    }\n\n    window.bugsnagClient = bugsnag(bugsnagOptions);\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n\n    'use strict';\n\n    function Bullet() {\n        // ------------------------------------------------------------------------------------------\n        // -- Custom Errors\n        // ------------------------------------------------------------------------------------------\n        function ParamCountError(methodName, expectedParamsString, paramCount) {\n\n            this.message = 'Bullet:: [' + methodName + '] ' + expectedParamsString + ', but received: ' + paramCount;\n            var error = new Error(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        ParamCountError.prototype = new Error();\n        ParamCountError.prototype.name = ParamCountError.name;\n        ParamCountError.prototype.constructor = ParamCountError;\n\n        function ParamTypeError(methodName, parameterName, parameter, expectedType) {\n\n            this.message = 'Bullet:: [' + methodName + '] Expected parameter - ' + parameterName + ' - to be type: ' + expectedType + ', but received type: ' + (typeof parameter === 'undefined' ? 'undefined' : _typeof(parameter));\n            var error = new TypeError(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        ParamTypeError.prototype = new TypeError();\n        ParamTypeError.prototype.name = ParamTypeError.name;\n        ParamTypeError.prototype.constructor = ParamTypeError;\n\n        function EventNameLengthError(methodName) {\n\n            this.message = 'Bullet:: [' + methodName + '] Expected event name parameter to be longer than 0 characters';\n            var error = new Error(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        EventNameLengthError.prototype = new Error();\n        EventNameLengthError.prototype.name = EventNameLengthError.name;\n        EventNameLengthError.prototype.constructor = EventNameLengthError;\n\n        function EventNamesArrayLengthError(methodName) {\n\n            this.message = 'Bullet:: [' + methodName + '] Expected event names array to contain one or more event names';\n            var error = new Error(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        EventNamesArrayLengthError.prototype = new Error();\n        EventNamesArrayLengthError.prototype.name = EventNamesArrayLengthError.name;\n        EventNamesArrayLengthError.prototype.constructor = EventNamesArrayLengthError;\n\n        function UndeclaredEventError(methodName, eventName) {\n\n            this.message = 'Bullet:: [' + methodName + '] Event string: \"' + eventName + '\" does not exist within the events dictionary\\nPlease use the Bullet.addEventName method to add this string.';\n\n            var error = new Error(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        UndeclaredEventError.prototype = new Error();\n        UndeclaredEventError.prototype.name = UndeclaredEventError.name;\n        UndeclaredEventError.prototype.constructor = UndeclaredEventError;\n\n        function UnmappedEventError(methodName, eventName) {\n\n            this.message = 'Bullet:: [' + methodName + '] Event string: \"' + eventName + '\" is not mapped to any callbacks\\nPlease use the Bullet.on method to map this string to a callback.';\n\n            var error = new Error(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        UnmappedEventError.prototype = new Error();\n        UnmappedEventError.prototype.name = UnmappedEventError.name;\n        UnmappedEventError.prototype.constructor = UnmappedEventError;\n\n        var _CALLBACK_NAMESPACE = '__bullet_pubsub__';\n        // ------------------------------------------------------------------------------------------\n        // -- Private variables\n        // ------------------------------------------------------------------------------------------\n        var _self = this;\n        var _mappings = {};\n        var _strictMode = false;\n        var _triggerAsync = true;\n\n        // Expose custom error type constructors (for testing), but use an underscore to imply privacy.\n        _self._errors = {\n            ParamCountError: ParamCountError,\n            ParamTypeError: ParamTypeError,\n            EventNameLengthError: EventNameLengthError,\n            EventNamesArrayLengthError: EventNamesArrayLengthError,\n            UndeclaredEventError: UndeclaredEventError,\n            UnmappedEventError: UnmappedEventError\n        };\n\n        // ------------------------------------------------------------------------------------------\n        // -- Public variables\n        // ------------------------------------------------------------------------------------------\n        _self.events = {};\n\n        // ------------------------------------------------------------------------------------------\n        // -- Private methods\n        // ------------------------------------------------------------------------------------------\n        function _runCallback(eventName, data) {\n            for (var id in _mappings[eventName].callbacks) {\n                var callbackObject = _mappings[eventName].callbacks[id];\n\n                if (typeof callbackObject.cb === 'function') callbackObject.cb(data);\n                if (typeof callbackObject.once === 'boolean' && callbackObject.once === true) _self.off(eventName, callbackObject.cb);\n            }\n        }\n\n        function _cloneCallbacks(callbacks) {\n            var clonedCallbacks = {};\n\n            for (var callbackName in callbacks) {\n\n                clonedCallbacks[callbackName] = {\n                    cb: callbacks[callbackName].cb,\n                    once: callbacks[callbackName].once\n                };\n            }\n\n            return clonedCallbacks;\n        }\n\n        function _deleteAllCallbackReferencesForEvent(eventName) {\n            for (var id in _mappings[eventName].callbacks) {\n                var callback = _mappings[eventName].callbacks[id].cb;\n\n                callback[_CALLBACK_NAMESPACE].totalEvents--;\n\n                if (callback[_CALLBACK_NAMESPACE].totalEvents === 0) {\n                    delete callback[_CALLBACK_NAMESPACE];\n                } else {\n                    delete callback[_CALLBACK_NAMESPACE][eventName];\n                }\n            }\n        }\n\n        function _deleteAllCallbackReferences() {\n            for (var eventName in _mappings) {\n                _deleteAllCallbackReferencesForEvent(eventName);\n            }\n        }\n\n        // Expose _getMappings method (for testing), but use an underscore to imply privacy.\n        _self._getMappings = function () {\n\n            // Return a dictionary object that has no effect on app state to ensure '_mappings'\n            // stays private, even if the value returned from this method is modified.\n            var clonedMappings = {};\n\n            for (var mapping in _mappings) {\n                clonedMappings[mapping] = {\n                    callbacks: _cloneCallbacks(_mappings[mapping].callbacks),\n                    totalCallbacks: _mappings[mapping].totalCallbacks\n                };\n            }\n\n            return clonedMappings;\n        };\n\n        // ------------------------------------------------------------------------------------------\n        // -- Public methods\n        // ------------------------------------------------------------------------------------------\n        _self.on = function (eventName, fn, once) {\n            if (arguments.length < 2 || arguments.length > 3) {\n                throw new ParamCountError('on', 'Expected between 2 and 3 parameters', arguments.length);\n            }\n\n            if (typeof eventName !== 'string') {\n                throw new ParamTypeError('on', 'event name', eventName, 'string');\n            } else if (eventName.length === 0) {\n                throw new EventNameLengthError('on');\n            } else if (_strictMode && typeof _self.events[eventName] === 'undefined') {\n                throw new UndeclaredEventError('on', eventName);\n            }\n\n            if (typeof fn !== 'function') {\n                throw new ParamTypeError('on', 'callback', fn, 'function');\n            }\n\n            if (typeof once !== 'undefined' && typeof once !== 'boolean') {\n                throw new ParamTypeError('on', 'once', once, 'boolean');\n            }\n\n            // Create a reference between the callback and stored event.\n            var callbackId = null;\n\n            // If the named event object already exists in the dictionary...\n            if (typeof _mappings[eventName] !== 'undefined') {\n                // Attempt to get the callback ID from the callback itself.\n                if (typeof fn[_CALLBACK_NAMESPACE] === 'undefined') {\n                    fn[_CALLBACK_NAMESPACE] = {\n                        totalEvents: 0\n                    };\n                }\n\n                // Add a new callback object to the existing event object.\n                if (typeof fn[_CALLBACK_NAMESPACE][eventName] === 'undefined') {\n                    callbackId = _mappings[eventName].totalCallbacks;\n\n                    _mappings[eventName].totalCallbacks++;\n\n                    _mappings[eventName].callbacks[callbackId] = {\n                        cb: fn,\n                        once: typeof once === 'boolean' ? once : false\n                    };\n\n                    // On the callback, create a reference to the event mapping.\n                    fn[_CALLBACK_NAMESPACE][eventName] = callbackId;\n                    fn[_CALLBACK_NAMESPACE].totalEvents++;\n                }\n\n                if (typeof once === 'boolean') {\n                    // Get the callback ID from the value of the existing event name key.\n                    callbackId = fn[_CALLBACK_NAMESPACE][eventName];\n\n                    // The function already exists, so update it's 'once' value.\n                    _mappings[eventName].callbacks[callbackId].once = once;\n                }\n            } else {\n                // Create a new event object in the dictionary with the specified name and callback.\n                _mappings[eventName] = {\n                    callbacks: {}\n                };\n\n                callbackId = 0;\n\n                _mappings[eventName].callbacks[callbackId] = { cb: fn, once: !!once };\n                _mappings[eventName].totalCallbacks = 1;\n\n                // On the callback, create a reference to the event mapping.\n                if (typeof fn[_CALLBACK_NAMESPACE] === 'undefined') {\n                    fn[_CALLBACK_NAMESPACE] = {};\n                    fn[_CALLBACK_NAMESPACE].totalEvents = 1;\n                } else {\n                    fn[_CALLBACK_NAMESPACE].totalEvents++;\n                }\n\n                fn[_CALLBACK_NAMESPACE][eventName] = callbackId;\n            }\n        };\n\n        _self.once = function (eventName, fn) {\n            if (arguments.length !== 2) {\n                throw new ParamCountError('once', 'Expected 2 parameters', arguments.length);\n            } else if (typeof eventName !== 'string') {\n                throw new ParamTypeError('once', 'event name', eventName, 'string');\n            } else if (eventName.length === 0) {\n                throw new EventNameLengthError('once');\n            } else if (_strictMode && typeof _self.events[eventName] === 'undefined') {\n                throw new UndeclaredEventError('once', eventName);\n            }\n\n            if (typeof fn !== 'function') {\n                throw new ParamTypeError('once', 'callback', fn, 'function');\n            }\n\n            _self.on(eventName, fn, true);\n        };\n\n        _self.off = function (eventName, fn) {\n            if (arguments.length === 0) {\n                // delete all references to Bullet that exist on mapped callbacks.\n                _deleteAllCallbackReferences();\n\n                // Remove all mappings from the dictionary.\n                _mappings = {};\n\n                return;\n            } else if (typeof eventName !== 'string') {\n                throw new ParamTypeError('off', 'event name', eventName, 'string');\n            } else if (eventName.length === 0) {\n                throw new EventNameLengthError('off');\n            } else if (_strictMode && typeof _self.events[eventName] === 'undefined') {\n                throw new UndeclaredEventError('off', eventName);\n            }\n\n            if (typeof _mappings[eventName] === 'undefined') {\n                // There is no mapping to remove, so return silently.\n                return;\n            }\n\n            // Remove just the function, if passed as a parameter and in the dictionary.\n            if (typeof fn === 'function') {\n                // if (typeof fn[_CALLBACK_NAMESPACE] === 'undefined' || typeof fn[_CALLBACK_NAMESPACE][eventName] === 'undefined')\n                // {\n                //     // TODO: Throw error here if in strict mode.\n                // }\n\n                // Retrieve a reference to the stored event from the callback.\n                var id = fn[_CALLBACK_NAMESPACE][eventName];\n                var fnToRemove = _mappings[eventName].callbacks[id];\n\n                if (typeof fnToRemove !== 'undefined') {\n                    // delete the callback object from the dictionary.\n                    delete _mappings[eventName].callbacks[id];\n\n                    // delete the event reference on the callback function.\n                    delete fn[_CALLBACK_NAMESPACE][eventName];\n\n                    _mappings[eventName].totalCallbacks--;\n                    fn[_CALLBACK_NAMESPACE].totalEvents--;\n\n                    if (_mappings[eventName].totalCallbacks === 0) {\n                        // There are no more functions in the dictionary that are\n                        // registered to this event, so delete the named event object.\n                        delete _mappings[eventName];\n                    }\n\n                    if (fn[_CALLBACK_NAMESPACE].totalEvents === 0) {\n                        // There are no more events registered on this callback,\n                        // so delete the Bullet namespace.\n                        delete fn[_CALLBACK_NAMESPACE];\n                    }\n                }\n            } else if (typeof fn !== 'undefined') {\n                throw new ParamTypeError('off', 'callback', fn, 'function');\n            } else {\n                // No callback was passed to the 'off' method...\n\n                // For each callback in _mappings[eventName], delete the reference to\n                // the specified event name on the callback itself.\n                _deleteAllCallbackReferencesForEvent(eventName);\n\n                // Delete all functions in the dictionary that are registered to this\n                // event by deleting the named event object.\n                delete _mappings[eventName];\n            }\n        };\n\n        // Replace a single mapped callback for the specified event name with a new callback.\n        _self.replaceCallback = function (eventName, oldFn, newFn, once) {\n\n            if (typeof eventName !== 'string') {\n                throw new ParamTypeError('replaceCallback', 'event name', eventName, 'string');\n            } else if (eventName.length === 0) {\n                throw new EventNameLengthError('replaceCallback');\n            } else if (typeof _mappings[eventName] === 'undefined') {\n                throw new UnmappedEventError('replaceCallback', eventName);\n            } else if (_strictMode && typeof _self.events[eventName] === 'undefined') {\n                throw new UndeclaredEventError('replaceCallback', eventName);\n            }\n\n            if (typeof oldFn !== 'function') {\n                throw new ParamTypeError('replaceCallback', 'callback', oldFn, 'function');\n            }\n\n            if (typeof newFn !== 'function') {\n                throw new ParamTypeError('replaceCallback', 'callback', newFn, 'function');\n            }\n\n            if (typeof once !== 'undefined' && typeof once !== 'boolean') {\n                throw new ParamTypeError('replaceCallback', 'once', once, 'boolean');\n            }\n\n            _self.off(eventName, oldFn);\n            _self.on(eventName, newFn, once);\n        };\n\n        // Replace all of the specified event name’s mapped callbacks with the specified callback.\n        _self.replaceAllCallbacks = function (eventName, newFn, once) {\n\n            if (typeof eventName !== 'string') {\n                throw new ParamTypeError('replace', 'event name', eventName, 'string');\n            } else if (eventName.length === 0) {\n                throw new EventNameLengthError('replace');\n            } else if (typeof _mappings[eventName] === 'undefined') {\n                throw new UnmappedEventError('replace', eventName);\n            } else if (_strictMode && typeof _self.events[eventName] === 'undefined') {\n                throw new UndeclaredEventError('replace', eventName);\n            }\n\n            if (typeof newFn !== 'function') {\n                throw new ParamTypeError('replace', 'callback', newFn, 'function');\n            }\n\n            if (typeof once !== 'undefined' && typeof once !== 'boolean') {\n                throw new ParamTypeError('replace', 'once', once, 'boolean');\n            }\n\n            _self.off(eventName);\n            _self.on(eventName, newFn, once);\n        };\n\n        _self.trigger = function (eventName, data) {\n            if (typeof eventName !== 'string') {\n                throw new ParamTypeError('trigger', 'event name', eventName, 'string');\n            } else if (eventName.length === 0) {\n                throw new EventNameLengthError('trigger');\n            } else if (_strictMode && typeof _self.events[eventName] === 'undefined') {\n                throw new UndeclaredEventError('trigger', eventName);\n            }\n\n            if (typeof _mappings[eventName] === 'undefined') {\n                if (_strictMode) throw new UnmappedEventError('trigger', eventName);\n\n                // Return silently if not in strict mode.\n                return;\n            }\n\n            // Check whether or not this is a browser environment.\n            if (_triggerAsync && typeof window !== 'undefined') {\n                window.setTimeout(function () {\n                    _runCallback(eventName, data);\n                }, 0);\n            } else {\n                _runCallback(eventName, data);\n            }\n        };\n\n        _self.addEventName = function (eventName) {\n\n            if (typeof eventName !== 'string') {\n                throw new ParamTypeError('addEventName', 'event name', eventName, 'string');\n            } else if (eventName.length === 0) {\n                throw new EventNameLengthError('addEventName');\n            }\n\n            _self.events[eventName] = eventName;\n        };\n\n        _self.addMultipleEventNames = function (eventNames) {\n\n            if (!(eventNames instanceof Array)) {\n                throw new ParamTypeError('addMultipleEventNames', 'event names', eventNames, 'array');\n            } else if (eventNames.length === 0) {\n                throw new EventNamesArrayLengthError('addMultipleEventNames');\n            }\n\n            var i = 0;\n            var length = eventNames.length;\n\n            for (i; i < length; i++) {\n                var currentEventName = eventNames[i];\n\n                _self.addEventName(currentEventName);\n            }\n        };\n\n        _self.removeEventName = function (eventName) {\n\n            if (typeof eventName !== 'string') {\n                throw new ParamTypeError('removeEventName', 'event name', eventName, 'string');\n            } else if (eventName.length === 0) {\n                throw new EventNameLengthError('removeEventName');\n            }\n\n            if (_self.events[eventName]) delete _self.events[eventName];\n        };\n\n        _self.getStrictMode = function () {\n\n            // Return a boolean that doesn't directly point to the internal '_strictMode' property.\n            return _strictMode === true ? true : false;\n        };\n\n        _self.setStrictMode = function (useStrictMode) {\n\n            if (typeof useStrictMode !== 'boolean') throw new ParamTypeError('setStrictMode', 'strict mode', useStrictMode, 'boolean');\n\n            _strictMode = useStrictMode;\n        };\n\n        _self.getTriggerAsync = function () {\n\n            // Return a boolean that doesn't directly point to the internal '_triggerAsync' property.\n            return _triggerAsync === true ? true : false;\n        };\n\n        _self.setTriggerAsync = function (useAsync) {\n\n            if (typeof useAsync !== 'boolean') throw new ParamTypeError('setTriggerAsync', 'trigger async', useAsync, 'boolean');\n\n            _triggerAsync = useAsync;\n        };\n\n        // TODO : Create an 'addMultipleEventNames' method with an array of strings passed as a param.\n        // - include type checks for string while looping over the array.\n\n        // TODO : Create a 'replaceAllEventNames' method with an array of strings passed as a param.\n        // - include type checks for string while looping over the array.\n\n        // TODO : Create a 'removeAllEventNames' method. No params necessary.\n        // – Internally this could simply call 'replaceAllEventNames' and pass an empty array as a param.\n\n        // TODO : Create an 'onAny' method with an array of strings passed as the first param and a single callback as the second.\n        // - include type checks for string while looping over the array.\n\n        // TODO : Create an 'onMultiple' method with an array of flat objects passed as a param.\n        // - example of required param structure:\n        // [{eventName: 'someEvent', callback: someCallback, once: false}, {eventName: 'anotherEvent', callback: anotherCallback, once: true}]\n    }\n\n    // ------------------------------------------------------------------------------------------\n    // -- Module definition\n    // ------------------------------------------------------------------------------------------\n    // Check for AMD/Module support, otherwise define Bullet as a global variable.\n\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n            return new Bullet();\n        }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = new Bullet();\n    } else {\n        window.Bullet = new Bullet();\n    }\n})();\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate) {\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function () {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  debounced.flush = function () {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_RESULT__;\n\n/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.1\n * @url craig.is/killing/mice\n */\n(function (window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111: '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if (action == 'keypress' && !e.metaKey && !e.ctrlKey || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function (character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function () {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, { type: info.action }, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function (combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function (keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function (keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function () {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function (keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function () {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function (e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function () {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function (object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function () {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = function (method) {\n                    return function () {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                }(method);\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n            return Mousetrap;\n        }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n})(typeof window !== 'undefined' ? window : null, typeof window !== 'undefined' ? document : null);\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar type = __webpack_require__(10);\n\nvar jsonpID = 0,\n    document = window.document,\n    key,\n    name,\n    rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n    scriptTypeRE = /^(?:text|application)\\/javascript/i,\n    xmlTypeRE = /^(?:text|application)\\/xml/i,\n    jsonType = 'application/json',\n    htmlType = 'text/html',\n    blankRE = /^\\s*$/;\n\nvar ajax = module.exports = function (options) {\n  var settings = extend({}, options || {});\n  for (key in ajax.settings) {\n    if (settings[key] === undefined) settings[key] = ajax.settings[key];\n  }ajaxStart(settings);\n\n  if (!settings.crossDomain) settings.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(settings.url) && RegExp.$2 != window.location.host;\n\n  var dataType = settings.dataType,\n      hasPlaceholder = /=\\?/.test(settings.url);\n  if (dataType == 'jsonp' || hasPlaceholder) {\n    if (!hasPlaceholder) settings.url = appendQuery(settings.url, 'callback=?');\n    return ajax.JSONP(settings);\n  }\n\n  if (!settings.url) settings.url = window.location.toString();\n  serializeData(settings);\n\n  var mime = settings.accepts[dataType],\n      baseHeaders = {},\n      protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n      xhr = ajax.settings.xhr(),\n      abortTimeout;\n\n  if (!settings.crossDomain) baseHeaders['X-Requested-With'] = 'XMLHttpRequest';\n  if (mime) {\n    baseHeaders['Accept'] = mime;\n    if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0];\n    xhr.overrideMimeType && xhr.overrideMimeType(mime);\n  }\n  if (settings.contentType || settings.data && settings.type.toUpperCase() != 'GET') baseHeaders['Content-Type'] = settings.contentType || 'application/x-www-form-urlencoded';\n  settings.headers = extend(baseHeaders, settings.headers || {});\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState == 4) {\n      clearTimeout(abortTimeout);\n      var result,\n          error = false;\n      if (xhr.status >= 200 && xhr.status < 300 || xhr.status == 304 || xhr.status == 0 && protocol == 'file:') {\n        dataType = dataType || mimeToDataType(xhr.getResponseHeader('content-type'));\n        result = xhr.responseText;\n\n        try {\n          if (dataType == 'script') (1, eval)(result);else if (dataType == 'xml') result = xhr.responseXML;else if (dataType == 'json') result = blankRE.test(result) ? null : JSON.parse(result);\n        } catch (e) {\n          error = e;\n        }\n\n        if (error) ajaxError(error, 'parsererror', xhr, settings);else ajaxSuccess(result, xhr, settings);\n      } else {\n        ajaxError(null, 'error', xhr, settings);\n      }\n    }\n  };\n\n  var async = 'async' in settings ? settings.async : true;\n  xhr.open(settings.type, settings.url, async);\n\n  for (name in settings.headers) {\n    xhr.setRequestHeader(name, settings.headers[name]);\n  }if (ajaxBeforeSend(xhr, settings) === false) {\n    xhr.abort();\n    return false;\n  }\n\n  if (settings.timeout > 0) abortTimeout = setTimeout(function () {\n    xhr.onreadystatechange = empty;\n    xhr.abort();\n    ajaxError(null, 'timeout', xhr, settings);\n  }, settings.timeout);\n\n  // avoid sending empty string (#319)\n  xhr.send(settings.data ? settings.data : null);\n  return xhr;\n};\n\n// trigger a custom event and return false if it was cancelled\nfunction triggerAndReturn(context, eventName, data) {\n  //todo: Fire off some events\n  //var event = $.Event(eventName)\n  //$(context).trigger(event, data)\n  return true; //!event.defaultPrevented\n}\n\n// trigger an Ajax \"global\" event\nfunction triggerGlobal(settings, context, eventName, data) {\n  if (settings.global) return triggerAndReturn(context || document, eventName, data);\n}\n\n// Number of active Ajax requests\najax.active = 0;\n\nfunction ajaxStart(settings) {\n  if (settings.global && ajax.active++ === 0) triggerGlobal(settings, null, 'ajaxStart');\n}\nfunction ajaxStop(settings) {\n  if (settings.global && ! --ajax.active) triggerGlobal(settings, null, 'ajaxStop');\n}\n\n// triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\nfunction ajaxBeforeSend(xhr, settings) {\n  var context = settings.context;\n  if (settings.beforeSend.call(context, xhr, settings) === false || triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false) return false;\n\n  triggerGlobal(settings, context, 'ajaxSend', [xhr, settings]);\n}\nfunction ajaxSuccess(data, xhr, settings) {\n  var context = settings.context,\n      status = 'success';\n  settings.success.call(context, data, status, xhr);\n  triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data]);\n  ajaxComplete(status, xhr, settings);\n}\n// type: \"timeout\", \"error\", \"abort\", \"parsererror\"\nfunction ajaxError(error, type, xhr, settings) {\n  var context = settings.context;\n  settings.error.call(context, xhr, type, error);\n  triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error]);\n  ajaxComplete(type, xhr, settings);\n}\n// status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\nfunction ajaxComplete(status, xhr, settings) {\n  var context = settings.context;\n  settings.complete.call(context, xhr, status);\n  triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings]);\n  ajaxStop(settings);\n}\n\n// Empty function, used as default callback\nfunction empty() {}\n\najax.JSONP = function (options) {\n  if (!('type' in options)) return ajax(options);\n\n  var callbackName = 'jsonp' + ++jsonpID,\n      script = document.createElement('script'),\n      abort = function abort() {\n    //todo: remove script\n    //$(script).remove()\n    if (callbackName in window) window[callbackName] = empty;\n    ajaxComplete('abort', xhr, options);\n  },\n      xhr = { abort: abort },\n      abortTimeout,\n      head = document.getElementsByTagName(\"head\")[0] || document.documentElement;\n\n  if (options.error) script.onerror = function () {\n    xhr.abort();\n    options.error();\n  };\n\n  window[callbackName] = function (data) {\n    clearTimeout(abortTimeout);\n    //todo: remove script\n    //$(script).remove()\n    delete window[callbackName];\n    ajaxSuccess(data, xhr, options);\n  };\n\n  serializeData(options);\n  script.src = options.url.replace(/=\\?/, '=' + callbackName);\n\n  // Use insertBefore instead of appendChild to circumvent an IE6 bug.\n  // This arises when a base node is used (see jQuery bugs #2709 and #4378).\n  head.insertBefore(script, head.firstChild);\n\n  if (options.timeout > 0) abortTimeout = setTimeout(function () {\n    xhr.abort();\n    ajaxComplete('timeout', xhr, options);\n  }, options.timeout);\n\n  return xhr;\n};\n\najax.settings = {\n  // Default type of request\n  type: 'GET',\n  // Callback that is executed before request\n  beforeSend: empty,\n  // Callback that is executed if the request succeeds\n  success: empty,\n  // Callback that is executed the the server drops error\n  error: empty,\n  // Callback that is executed on request complete (both: error and success)\n  complete: empty,\n  // The context for the callbacks\n  context: null,\n  // Whether to trigger \"global\" Ajax events\n  global: true,\n  // Transport\n  xhr: function xhr() {\n    return new window.XMLHttpRequest();\n  },\n  // MIME types mapping\n  accepts: {\n    script: 'text/javascript, application/javascript',\n    json: jsonType,\n    xml: 'application/xml, text/xml',\n    html: htmlType,\n    text: 'text/plain'\n  },\n  // Whether the request is to another domain\n  crossDomain: false,\n  // Default timeout\n  timeout: 0\n};\n\nfunction mimeToDataType(mime) {\n  return mime && (mime == htmlType ? 'html' : mime == jsonType ? 'json' : scriptTypeRE.test(mime) ? 'script' : xmlTypeRE.test(mime) && 'xml') || 'text';\n}\n\nfunction appendQuery(url, query) {\n  return (url + '&' + query).replace(/[&?]{1,2}/, '?');\n}\n\n// serialize payload and append it to the URL for GET requests\nfunction serializeData(options) {\n  if (type(options.data) === 'object') options.data = param(options.data);\n  if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) options.url = appendQuery(options.url, options.data);\n}\n\najax.get = function (url, success) {\n  return ajax({ url: url, success: success });\n};\n\najax.post = function (url, data, success, dataType) {\n  if (type(data) === 'function') dataType = dataType || success, success = data, data = null;\n  return ajax({ type: 'POST', url: url, data: data, success: success, dataType: dataType });\n};\n\najax.getJSON = function (url, success) {\n  return ajax({ url: url, success: success, dataType: 'json' });\n};\n\nvar escape = encodeURIComponent;\n\nfunction serialize(params, obj, traditional, scope) {\n  var array = type(obj) === 'array';\n  for (var key in obj) {\n    var value = obj[key];\n\n    if (scope) key = traditional ? scope : scope + '[' + (array ? '' : key) + ']';\n    // handle data in serializeArray() format\n    if (!scope && array) params.add(value.name, value.value);\n    // recurse into nested objects\n    else if (traditional ? type(value) === 'array' : type(value) === 'object') serialize(params, value, traditional, key);else params.add(key, value);\n  }\n}\n\nfunction param(obj, traditional) {\n  var params = [];\n  params.add = function (k, v) {\n    this.push(escape(k) + '=' + escape(v));\n  };\n  serialize(params, obj, traditional);\n  return params.join('&').replace('%20', '+');\n}\n\nfunction extend(target) {\n  var slice = Array.prototype.slice;\n  slice.call(arguments, 1).forEach(function (source) {\n    for (key in source) {\n      if (source[key] !== undefined) target[key] = source[key];\n    }\n  });\n  return target;\n}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (val) {\n  switch (toString.call(val)) {\n    case '[object Function]':\n      return 'function';\n    case '[object Date]':\n      return 'date';\n    case '[object RegExp]':\n      return 'regexp';\n    case '[object Arguments]':\n      return 'arguments';\n    case '[object Array]':\n      return 'array';\n    case '[object String]':\n      return 'string';\n  }\n\n  if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) == 'object' && val && typeof val.length == 'number') {\n    try {\n      if (typeof val.callee == 'function') return 'arguments';\n    } catch (ex) {\n      if (ex instanceof TypeError) {\n        return 'arguments';\n      }\n    }\n  }\n\n  if (val === null) return 'null';\n  if (val === undefined) return 'undefined';\n  if (val && val.nodeType === 1) return 'element';\n  if (val === Object(val)) return 'object';\n\n  return typeof val === 'undefined' ? 'undefined' : _typeof(val);\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* Bulk Pinner - Create multiple pins in your Pinterest boards at once\r\nopyright (C) 2017 Luke Denton\r\nr\nhis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation; either version 3 of the License, or\r\nat your option) any later version.\r\nr\nhis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nor FITNESS FOR A PARTICULAR PURPOSE.  See the\r\neneral Public License for more details.\r\nr\nou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nn\n\nvar _packingAjax = __webpack_require__(9);\n\nvar _packingAjax2 = _interopRequireDefault(_packingAjax);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Class AJAX\r\n *\r\n * Abstraction of all AJAX interactions\r\n */\nvar AJAX = function () {\n\n    /**\r\n     * Class constructor\r\n     *\r\n     * @returns {null}\r\n     */\n    function AJAX() {\n        _classCallCheck(this, AJAX);\n\n        this.baseUrl = 'https://api.pinterest.com/';\n        this.apiVersion = 'v1/';\n    }\n\n    /**\r\n     * Build the URL of the appropriate API being called\r\n     *\r\n     * @param {string}  endpoint The API endpoint being queried\r\n     *\r\n     * @returns {string}\r\n     * @private\r\n     */\n\n\n    _createClass(AJAX, [{\n        key: '_buildUrl',\n        value: function _buildUrl(endpoint) {\n            return this.baseUrl + this.apiVersion + endpoint;\n        }\n\n        /**\r\n         * Execute the API query\r\n         *\r\n         * @param {string} endpoint The API endpoint to be queried\r\n         * @param {Object} data     Any additional data required\r\n         * @param {string} type     The type of request being made. E.g. GET, POST etc\r\n         *\r\n         * @returns {Promise}\r\n         * @private\r\n         */\n\n    }, {\n        key: '_fetch',\n        value: function _fetch(endpoint, data, type) {\n            var _this = this;\n\n            return new Promise(function (resolve, reject) {\n                var url = _this._buildUrl(endpoint);\n\n                (0, _packingAjax2.default)({\n                    url: url,\n                    type: type,\n                    dataType: 'json',\n                    data: data,\n                    success: function success(response) {\n                        resolve(response);\n                    },\n                    error: function error(response) {\n                        reject(response);\n                    }\n                });\n            });\n        }\n\n        /**\r\n         * Helper function for performing a GET request\r\n         *\r\n         * @param {string} endpoint The API endpoint to be queried\r\n         * @param {Object} data     Additional data to be sent with the request\r\n         *\r\n         * @returns {Promise}\r\n         */\n\n    }], [{\n        key: 'Get',\n        value: function Get(endpoint, data) {\n            return new Promise(function (resolve, reject) {\n                var ajax = new AJAX();\n                ajax._fetch(endpoint, data, 'GET').then(resolve).catch(reject);\n            });\n        }\n\n        /**\r\n         * Helper function for performing a POST request\r\n         *\r\n         * @param {string} endpoint The API endpoint to be queried\r\n         * @param {Object} data     Additional data to be sent with the request\r\n         *\r\n         * @returns {Promise}\r\n         */\n\n    }, {\n        key: 'Post',\n        value: function Post(endpoint, data) {\n            return new Promise(function (resolve, reject) {\n                var ajax = new AJAX();\n                ajax._fetch(endpoint, data, 'POST').then(resolve).catch(reject);\n            });\n        }\n    }]);\n\n    return AJAX;\n}();\n\nexports.default = AJAX;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\r\n * Copyright (C) 2017 Luke Denton\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation; either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\n\n/**\r\n * Class ErrorUtil\r\n *\r\n * Interface for abstracting the error reporting service\r\n */\nvar ErrorUtil = function () {\n    function ErrorUtil() {\n        _classCallCheck(this, ErrorUtil);\n    }\n\n    _createClass(ErrorUtil, null, [{\n        key: 'Log',\n\n\n        /**\r\n         * Log an error to the bug tracking system\r\n         *\r\n         * @param {Error}  error   A description of the error\r\n         * @param {Object} options Extra details of the error\r\n         *\r\n         * @returns {null}\r\n         */\n        value: function Log(error, options) {\n            if (window.location.origin === 'https://bulkpinner.github.io') {\n                bugsnagClient.notify(error, options);\n            } else {\n                console.error(error);\n                console.error(options);\n            }\n        }\n    }]);\n\n    return ErrorUtil;\n}();\n\nexports.default = ErrorUtil;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* Bulk Pinner - Create multiple pins in your Pinterest boards at once\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright (C) 2017 Luke Denton\nnhis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3 of the License, or\nat your option) any later version.\nnhis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\neneral Public License for more details.\nnou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\nn\nvar _CustomEvent = __webpack_require__(2);\n\nvar _CustomEvent2 = _interopRequireDefault(_CustomEvent);\n\nvar _API = __webpack_require__(0);\n\nvar _API2 = _interopRequireDefault(_API);\n\nvar _DataStore = __webpack_require__(1);\n\nvar _DataStore2 = _interopRequireDefault(_DataStore);\n\nvar _PinPreview = __webpack_require__(3);\n\nvar _PinPreview2 = _interopRequireDefault(_PinPreview);\n\nvar _mousetrap = __webpack_require__(8);\n\nvar _mousetrap2 = _interopRequireDefault(_mousetrap);\n\nvar _debounce = __webpack_require__(7);\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _Analytics = __webpack_require__(4);\n\nvar _Analytics2 = _interopRequireDefault(_Analytics);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class Application\n */\nvar Application = function () {\n    function Application() {\n        var _this = this;\n\n        _classCallCheck(this, Application);\n\n        this.previewsPinsContainer = document.querySelector('.preview-pins-container');\n        this.imageSelectContainer = document.querySelector(\".image-select-container\");\n        this.refreshBoardsButton = document.querySelector('.refresh-boards');\n        this.pinsContainer = document.querySelector('.pins-container');\n        this.sendToPinterestButton = document.querySelector('.send-to-pinterest');\n        this.sendAllToBoardSelect = document.getElementById('send-all-to-board');\n        this.fileUploadInput = document.getElementById(\"fileToUpload\");\n        this.modalOverlay = document.querySelector('.modal-overlay');\n        this.clearButton = document.querySelector(\".clear-completed\");\n        this.clearAllButton = document.querySelector(\".clear-all\");\n        this.pinPreviews = [];\n\n        // Wait until the user is authenticated before showing the main application interface\n        _CustomEvent2.default.on('user-authenticated', function () {\n            _this.init();\n        });\n    }\n\n    /**\n     * @returns {null}\n     */\n\n\n    _createClass(Application, [{\n        key: 'init',\n        value: function init() {\n            this.showApplicationContainer();\n            this.attachListeners();\n            this.createKeyboardShortcuts();\n        }\n\n        /**\n         * @returns {null}\n         */\n\n    }, {\n        key: 'showApplicationContainer',\n        value: function showApplicationContainer() {\n            this.imageSelectContainer.classList.toggle('hidden', false);\n        }\n\n        /**\n         * @returns {null}\n         */\n\n    }, {\n        key: 'hideApplicationContainer',\n        value: function hideApplicationContainer() {\n            this.imageSelectContainer.classList.toggle('hidden', true);\n        }\n\n        /**\n         * Attach event listeners\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'attachListeners',\n        value: function attachListeners() {\n            var _this2 = this;\n\n            this.refreshBoardsButton.addEventListener('click', function () {\n                Application.ToggleActionMenu(false);\n                _this2.loadBoards(true).then(function (boards) {\n                    _this2.populateBoardNames(boards);\n                }).catch(function (response) {\n                    console.error(response);\n                });\n                _Analytics2.default.FeatureUsed('refresh_boards');\n            });\n\n            this.clearButton.addEventListener('click', function (e) {\n                _this2.clearCompleted();\n            });\n\n            this.clearAllButton.addEventListener('click', function (e) {\n                _this2.clearAll();\n            });\n\n            this.pinsContainer.addEventListener('blur', function (e) {\n                if (e.target.matches('.note')) {\n                    e.target.classList.toggle('invalid', e.target.value !== '');\n                }\n            });\n\n            // Event listener that will handle closing any open action menus\n            document.querySelector('body').addEventListener('click', function (e) {\n                _this2.pinPreviews.forEach(function (pinPreview) {\n                    if (pinPreview.actionMenuTrigger !== e.target) {\n                        pinPreview.hidePreviewActions();\n                    }\n                });\n                Application.ToggleActionMenu(false);\n            });\n\n            this.sendToPinterestButton.addEventListener('click', function () {\n                if (_this2.validateInputs()) {\n                    _this2.createPins();\n                }\n            });\n\n            this.sendAllToBoardSelect.addEventListener('change', function (e) {\n                var boardValue = e.target.value;\n\n                if (boardValue !== '') {\n                    _this2.updateSelectedBoards(boardValue);\n                    _Analytics2.default.FeatureUsed('update_selected_boards');\n                }\n            });\n\n            this.fileUploadInput.onchange = function (e) {\n                return _this2.createPinPreviews(e);\n            };\n\n            document.querySelector('.privacy-policy-link').addEventListener('click', function (e) {\n                _this2.showPrivacyPolicy();\n            });\n\n            document.querySelector('.modal-overlay').addEventListener('click', function (e) {\n                if (e.target.classList.contains('modal-overlay')) {\n                    _this2.hidePrivacyPolicy();\n                    _this2.hideKeyboardShortcuts();\n                    return;\n                }\n\n                if (e.target.classList.contains('close')) {\n                    _this2.hidePrivacyPolicy();\n                    _this2.hideKeyboardShortcuts();\n                }\n            });\n\n            // Prepare the preview pin template with names of boards to pin to\n            this.loadBoards().then(function (boards) {\n                _this2.populateBoardNames(boards);\n            });\n\n            // Listen for scroll event to check for updating the sticky-ness of the Pin button\n            document.addEventListener('scroll', (0, _debounce2.default)(function () {\n                _this2.updateStickyPin();\n            }, 10, false));\n\n            document.querySelector('.action-menu-toggle').addEventListener('click', function (e) {\n                e.stopImmediatePropagation();\n                Application.ToggleActionMenu();\n            });\n\n            // @TODO This will need to be refactored - create an action menu class that will work for both the user actions and app actions\n            document.querySelector('.user-action-menu-toggle').addEventListener('click', function (e) {\n                document.querySelector('.user-actions-container').classList.toggle('show-menu');\n            });\n\n            document.querySelector('.user-action__disconnect').addEventListener('click', function (e) {\n                _DataStore2.default.Remove(_DataStore2.default.DATA__ACCESS_TOKEN());\n                _DataStore2.default.Remove(_DataStore2.default.DATA__BOARDS());\n                _Analytics2.default.FeatureUsed('disconnect_pinterest');\n                location.reload();\n            });\n        }\n\n        /**\n         * Clear preview pins that have been uploaded to pinterest\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'clearCompleted',\n        value: function clearCompleted() {\n            var completedPins = document.querySelectorAll(\".preview-container[data-pinned='true']\");\n            this.clear(completedPins);\n            this.pinPreviews = this.pinPreviews.filter(function (preview) {\n                return !preview.isPinned();\n            });\n        }\n\n        /**\n         * Clear all preview pins\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'clearAll',\n        value: function clearAll() {\n            var previewPins = document.querySelectorAll(\".preview-container\");\n            this.clear(previewPins);\n            this.pinPreviews = [];\n        }\n\n        /**\n         * Remove elements from the DOM\n         *\n         * @param {NodeList} elements Array of elements to remove\n         */\n\n    }, {\n        key: 'clear',\n        value: function clear(elements) {\n            for (var i = 0; i < elements.length; i++) {\n                elements[i].remove();\n            }\n\n            if (document.querySelectorAll(\".preview-container\").length === 0) {\n                document.querySelector('.page-header').classList.toggle('large', true);\n                document.querySelector('.get-started').classList.toggle('hidden', false);\n                document.querySelector('.application-container').classList.toggle('expanded', false);\n                document.querySelector('.label-text').innerText = 'Choose Images';\n                document.querySelector('.preview-pins-container').classList.toggle('hidden', true);\n            }\n\n            this.resetSendAllToBoard();\n            Application.ToggleActionMenu(false);\n        }\n\n        /**\n         * Reset the selected value in the Send all to board drop down\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'resetSendAllToBoard',\n        value: function resetSendAllToBoard() {\n            document.querySelector(\"#send-all-to-board\").value = \"\";\n        }\n\n        /**\n         * Assign application keyboard shortcuts\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'createKeyboardShortcuts',\n        value: function createKeyboardShortcuts() {\n            var _this3 = this;\n\n            // Choose/Add more pictures to pin\n            _mousetrap2.default.bind('a', function () {\n                document.getElementById('fileToUpload').click();\n                _Analytics2.default.KeyboardShortcutUsed('add_more');\n            });\n\n            // Clear all completed (pinned) images\n            _mousetrap2.default.bind('p c', function () {\n                document.querySelector('.clear-completed.action-button').click();\n                _Analytics2.default.KeyboardShortcutUsed('clear_completed');\n            });\n\n            // Clean all images\n            _mousetrap2.default.bind('p x', function () {\n                document.querySelector('.clear-all.action-button').click();\n                _Analytics2.default.KeyboardShortcutUsed('clear_all');\n            });\n\n            // Show privacy policy\n            _mousetrap2.default.bind('p p', function () {\n                document.querySelector('.privacy-policy-link').click();\n                _Analytics2.default.KeyboardShortcutUsed('show_privacy_policy');\n            });\n\n            // Show privacy policy\n            _mousetrap2.default.bind('esc', function () {\n                _this3.hideKeyboardShortcuts();\n                _this3.hidePrivacyPolicy();\n            });\n\n            // Autofill shortcut\n            _mousetrap2.default.bind('> > >', function () {\n                _this3.autofillFields();\n                _Analytics2.default.KeyboardShortcutUsed('autofill_fields');\n            });\n\n            // Show keyboard shortcuts modal\n            _mousetrap2.default.bind('?', function () {\n                _this3.showKeyboardShortcuts();\n                _Analytics2.default.KeyboardShortcutUsed('show_keyboard_shortcuts_modal');\n            });\n        }\n\n        /**\n         * Loop through the images selected and create instances of the Pin Preview class for each\n         *\n         * @param {Event} e The event object\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'createPinPreviews',\n        value: function createPinPreviews(e) {\n            var _this4 = this;\n\n            var input = e.target;\n\n            if (input.files.length === 0) {\n                return;\n            }\n\n            document.querySelector('.page-header').classList.toggle('large', false);\n            document.querySelector('.get-started').classList.toggle('hidden', true);\n            document.querySelector('.application-container').classList.toggle('expanded', true);\n            document.querySelector('.label-text').innerText = 'Add More Images';\n            this.previewsPinsContainer.classList.toggle('hidden', false);\n\n            window.setTimeout(function () {\n                // Allow time for the CSS animation to run before\n                // Set the breakpoint for the Pin button becoming sticky _after_ the header is back to it's small state\n                var scrollOffset = -20; // Padding changes from 30px top 10px, so that needs to be factored in\n                _this4.windowBreakpoint = Math.abs(document.querySelector('.action-toolbar').getBoundingClientRect().top - document.querySelector('body').getBoundingClientRect().top - scrollOffset);\n\n                for (var i = 0; i < input.files.length; i++) {\n                    var file = input.files[i];\n                    var pinPreview = new _PinPreview2.default(file);\n                    _this4.previewsPinsContainer.querySelector(\".pins-container\").appendChild(pinPreview.render());\n\n                    // Grab the pin preview element that was just created and set it on the Pin Preview class\n                    // Unable to use the returned value of appendChild, as it returns and empty DocumentFragment\n                    var pinPreviews = _this4.previewsPinsContainer.querySelectorAll('.preview-container');\n                    var instance = pinPreviews[pinPreviews.length - 1];\n                    pinPreview.setInstance(instance);\n                    pinPreview.attachListeners();\n\n                    _this4.pinPreviews.push(pinPreview);\n                }\n            }, 300);\n        }\n\n        /**\n         * Load the users boards\n         *\n         * @param {Boolean} forceLoad [Optional] Indicates if the API should be queried regardless of DataStore\n         *\n         * @returns {Promise}\n         */\n\n    }, {\n        key: 'loadBoards',\n        value: function loadBoards() {\n            var forceLoad = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return new Promise(function (resolve, reject) {\n                var boards = _DataStore2.default.Get(_DataStore2.default.DATA__BOARDS());\n                if (boards !== null && !forceLoad) {\n                    resolve(JSON.parse(boards));\n                    return;\n                }\n\n                _API2.default.Boards().then(function (boards) {\n                    _DataStore2.default.Set(_DataStore2.default.DATA__BOARDS(), JSON.stringify(boards));\n                    resolve(boards);\n                }).catch(function (response) {\n                    reject(response);\n                });\n            });\n        }\n\n        /**\n         * Populate the <select> of board names with the names returned from Pinterest API\n         *\n         * @param {Array} boards An array of board objects\n         *\n         * @return {null}\n         */\n\n    }, {\n        key: 'populateBoardNames',\n        value: function populateBoardNames(boards) {\n            var boardNames = document.getElementById('preview-template').content.querySelector(\".board-names\");\n            boardNames.innerHTML = ''; // Remove the 'Loading...' option\n\n            if (boards.length === 0) {\n                var option = this.createBoardNameOptionElement({ id: '', name: 'You don\\'t have any Pinterest boards!' });\n                boardNames.appendChild(option);\n                document.querySelector(\".send-to-pinterest\").classList.toggle('hidden', true); // Can't send to pinterest as the user doesn't have any boards\n                return;\n            }\n\n            // The user may have seen the message above, gone to Pinterest to create a board, and then come back to click the Refresh Boards button\n            document.querySelector(\".send-to-pinterest\").classList.toggle('hidden', false);\n\n            for (var i = 0; i < boards.length; i++) {\n                var board = boards[i];\n                var _option = this.createBoardNameOptionElement(board);\n                boardNames.appendChild(_option);\n            }\n\n            // Update any <select> elements in preview-containers that have already been activated from the template\n            var existingBoardNameSelectors = document.querySelectorAll('.board-names');\n            for (var _i = 0; _i < existingBoardNameSelectors.length; _i++) {\n                var select = existingBoardNameSelectors[_i];\n                select.innerHTML = '';\n\n                // If the board being looped is the 'send all to board', need to add the blank option\n                if (select.id === 'send-all-to-board') {\n                    var _option2 = this.createBoardNameOptionElement({ name: '---', id: '' });\n                    select.appendChild(_option2);\n                }\n\n                for (var _i2 = 0; _i2 < boards.length; _i2++) {\n                    var _board = boards[_i2];\n                    var _option3 = this.createBoardNameOptionElement(_board);\n                    select.appendChild(_option3);\n                }\n            }\n        }\n\n        /**\n         * Create a new <option> element for the provided board object\n         *\n         * @param {Object} board Object representing a Pinterest board\n         *\n         * @returns {Element}\n         */\n\n    }, {\n        key: 'createBoardNameOptionElement',\n        value: function createBoardNameOptionElement(board) {\n            var option = document.createElement('option');\n            option.value = board.id;\n            option.innerText = board.name;\n            return option;\n        }\n\n        /**\n         * Update the selected board in each of the pin previews to match the one selected in the\n         * Send all images to board drop down\n         *\n         * @param {int} newBoard The ID value of the board to be selected\n         */\n\n    }, {\n        key: 'updateSelectedBoards',\n        value: function updateSelectedBoards(newBoard) {\n            // Loop through all existing board name selectors and update their values to match the one just selected\n            var boardNameSelectors = document.querySelectorAll('.preview-pin-board-select');\n            for (var i = 0; i < boardNameSelectors.length; i++) {\n                var boardNameSelect = boardNameSelectors[i];\n\n                boardNameSelect.value = newBoard;\n            }\n        }\n\n        /**\n         * Loop through all pin previews and make sure a note has been set\n         *\n         * If a required field isn't filled in, it will be marked as invalid, but also set up with tabIndexing,\n         * so that users can click tab to easily move between only the notes that aren't filled in yet\n         *\n         * @returns {Boolean}\n         */\n\n    }, {\n        key: 'validateInputs',\n        value: function validateInputs() {\n            var previews = document.querySelectorAll('.preview-container');\n            var error = false;\n            var tabIndex = 1;\n\n            var _loop = function _loop(i) {\n                var preview = previews[i];\n\n                var noteContainer = preview.querySelector(\".note-container\");\n                var note = noteContainer.querySelector(\".note\").value;\n\n                if (note === '') {\n                    var _note = preview.querySelector('.note');\n                    _note.classList.toggle('invalid', true);\n                    _note.tabIndex = tabIndex;\n                    if (tabIndex === 1) {\n                        _note.focus();\n                        noteContainer.dataset.balloon = noteContainer.dataset.tooltip;\n\n                        // @todo: This needs to be cleaned up and removed from here. Also need to make sure it only triggers once\n                        _note.addEventListener('blur', function (e) {\n                            noteContainer.removeAttribute('data-balloon');\n                        });\n                    }\n                    tabIndex++;\n                    error = true;\n                }\n            };\n\n            for (var i = 0; i < previews.length; i++) {\n                _loop(i);\n            }\n\n            return error === false;\n        }\n\n        /**\n         * Loop through all of the <img> elements, and call the API function to create a pin,\n         * with all the relevant information\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'createPins',\n        value: function createPins() {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.pinPreviews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var pinPreview = _step.value;\n\n                    // Skip any images that have already been pinned in this session\n                    if (pinPreview.instance.dataset.pinned) {\n                        continue;\n                    }\n\n                    pinPreview.createPin();\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Display the privacy policy modal\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'showPrivacyPolicy',\n        value: function showPrivacyPolicy() {\n            this.modalOverlay.classList.remove('hidden');\n            this.modalOverlay.querySelector('.privacy-policy-modal').classList.remove('hidden');\n        }\n\n        /**\n         * Hide the privacy policy modal\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'hidePrivacyPolicy',\n        value: function hidePrivacyPolicy() {\n            this.modalOverlay.classList.add('hidden');\n            this.modalOverlay.querySelector('.privacy-policy-modal').classList.add('hidden');\n        }\n\n        /**\n         * Display the keyboard shortcuts modal\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'showKeyboardShortcuts',\n        value: function showKeyboardShortcuts() {\n            this.modalOverlay.classList.remove('hidden');\n            this.modalOverlay.querySelector('.keyboard-shortcuts-modal').classList.remove('hidden');\n        }\n\n        /**\n         * Hide the keyboard shortcuts modal\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'hideKeyboardShortcuts',\n        value: function hideKeyboardShortcuts() {\n            this.modalOverlay.classList.add('hidden');\n            this.modalOverlay.querySelector('.keyboard-shortcuts-modal').classList.add('hidden');\n        }\n\n        /**\n         * Auto fill the note and link fields from the first Pin Preview element, to the rest of the Pin Preview elements\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'autofillFields',\n        value: function autofillFields() {\n            if (this.pinPreviews.length === 0) {\n                return;\n            }\n\n            var noteField = this.pinPreviews[0].instance.querySelector(\"#note\").value;\n            var linkField = this.pinPreviews[0].instance.querySelector(\".link\").value;\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.pinPreviews[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var pinPreview = _step2.value;\n\n                    pinPreview.setNote(noteField);\n                    pinPreview.setLink(linkField);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Check for and enable/disable the Pin button from being sticky\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'updateStickyPin',\n        value: function updateStickyPin() {\n            if (window.pageYOffset >= this.windowBreakpoint) {\n                document.querySelector('.action-toolbar').classList.toggle('sticky', true);\n                document.querySelector('.preview-pins-container').classList.toggle('toolbar-is-sticky', true);\n            } else {\n                document.querySelector('.action-toolbar').classList.toggle('sticky', false);\n                document.querySelector('.preview-pins-container').classList.toggle('toolbar-is-sticky', false);\n            }\n        }\n\n        /**\n         * Toggle the state of the action menu\n         *\n         * @param {boolean|undefined} show [Optional] True/false to force show/hide the menu\n         *                                 No value passed and the menu will just toggle\n         *\n         * @returns {null}\n         */\n\n    }], [{\n        key: 'ToggleActionMenu',\n        value: function ToggleActionMenu() {\n            var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n            var actionButtons = document.querySelector('.action-buttons');\n\n            if (typeof show !== 'undefined') {\n                actionButtons.classList.toggle('show-menu', show);\n            } else {\n                actionButtons.classList.toggle('show-menu');\n            }\n        }\n    }]);\n\n    return Application;\n}();\n\nexports.default = Application;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* Bulk Pinner - Create multiple pins in your Pinterest boards at once\nopyright (C) 2017 Luke Denton\nnhis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3 of the License, or\nat your option) any later version.\nnhis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nor FITNESS FOR A PARTICULAR PURPOSE.  See the\neneral Public License for more details.\nnou should have received a copy of the GNU General Public License\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * along with this program.  If not, see <http://www.gnu.org/licenses/>.\nn\nvar _CustomEvent = __webpack_require__(2);\n\nvar _CustomEvent2 = _interopRequireDefault(_CustomEvent);\n\nvar _API = __webpack_require__(0);\n\nvar _API2 = _interopRequireDefault(_API);\n\nvar _DataStore = __webpack_require__(1);\n\nvar _DataStore2 = _interopRequireDefault(_DataStore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class Authorization\n */\nvar Authorization = function () {\n    function Authorization() {\n        var _this = this;\n\n        _classCallCheck(this, Authorization);\n\n        this.authenticationContainer = document.querySelector(\".authentication-container\");\n        this.authenticationButton = document.querySelector(\".authenticate-button\");\n\n        // Listen for the instruction that the user isn't authenticated yet\n        _CustomEvent2.default.on('user-not-authenticated', function () {\n            _this.init();\n        });\n    }\n\n    /**\n     * Initialise the authorization section of the application\n     *\n     * @returns {null}\n     */\n\n\n    _createClass(Authorization, [{\n        key: 'init',\n        value: function init() {\n            this.showAuthenticationContainer();\n            this.attachListeners();\n        }\n\n        /**\n         * @returns {null}\n         */\n\n    }, {\n        key: 'showAuthenticationContainer',\n        value: function showAuthenticationContainer() {\n            this.authenticationContainer.classList.toggle('hidden', false);\n            _CustomEvent2.default.trigger('authentication-shown');\n        }\n\n        /**\n         * @returns {null}\n         */\n\n    }, {\n        key: 'hideAuthenticationContainer',\n        value: function hideAuthenticationContainer() {\n            this.authenticationContainer.classList.toggle('hidden', true);\n            _CustomEvent2.default.trigger('authentication-hidden');\n        }\n\n        /**\n         * Attach event listeners\n         *\n         * @returns {null}\n         */\n\n    }, {\n        key: 'attachListeners',\n        value: function attachListeners() {\n            var _this2 = this;\n\n            this.authenticationButton.addEventListener('click', function () {\n                _API2.default.Login().then(function (_ref) {\n                    var accessToken = _ref.accessToken;\n\n                    _DataStore2.default.Set(_DataStore2.default.DATA__ACCESS_TOKEN(), accessToken);\n                    _CustomEvent2.default.trigger('user-authenticated');\n                }).catch(function (response) {\n                    console.error(response);\n                });\n            });\n\n            // Make sure the authentication container is hidden if the application container gets shown\n            _CustomEvent2.default.on('user-authenticated', function (e) {\n                _this2.hideAuthenticationContainer();\n            });\n        }\n    }]);\n\n    return Authorization;\n}();\n\nexports.default = Authorization;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(5);\nmodule.exports = __webpack_require__(3);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// scripts.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap aba67758cf5c4808fd8f","/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\r\n * Copyright (C) 2017 Luke Denton\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation; either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport AJAX from 'services/AJAX';\r\nimport DataStore from 'services/DataStore';\r\n\r\n/**\r\n * Class API\r\n *\r\n * Interface for communicating with the API\r\n */\r\nexport default class API {\r\n\r\n    /**\r\n     * Check if a user has authenticated the application. I.e. an access token exists\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    static IsAuthenticated() {\r\n        return DataStore.Get(DataStore.DATA__ACCESS_TOKEN()) !== null;\r\n    }\r\n\r\n    /**\r\n     * Initialise the Pinterest SDK and call the login function to get an access token\r\n     * Access token information will be set in the Pinterest SDK, however at the moment\r\n     * the SDK is only used here\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static Login() {\r\n        return new Promise((resolve, reject) => {\r\n            PDK.init({\r\n                appId: \"4927694653406329461\", // Change this\r\n                cookie: true\r\n            });\r\n            PDK.login({scope: 'read_public, write_public'}, ({session}) => {\r\n                PDK.setSession(session);\r\n                resolve(session);\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get cursor of users' Pins\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static Pins() {\r\n        return new Promise((resolve, reject) => {\r\n            AJAX.Post('me/pins/', data)\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get list of users boards\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static Boards() {\r\n        return new Promise((resolve, reject) => {\r\n            AJAX.Get('me/boards/', {\r\n                access_token: DataStore.Get(DataStore.DATA__ACCESS_TOKEN())\r\n            }, true)\r\n                .then(({data}) => {\r\n                    data.sort((a, b) => {\r\n                        let nameA = a.name.toUpperCase();\r\n                        let nameB = b.name.toUpperCase();\r\n                        if (nameA < nameB) {\r\n                            return -1;\r\n                        }\r\n                        if (nameA > nameB) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n\r\n                    resolve(data);\r\n                })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Send request to Pinterest API to create a new pin\r\n     *\r\n     * @param {Object} data The data to create the pin with\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static CreatePin(data) {\r\n        return new Promise((resolve, reject) => {\r\n            AJAX.Post('pins/', {\r\n                access_token: DataStore.Get(DataStore.DATA__ACCESS_TOKEN()),\r\n                ...data\r\n            })\r\n            .then(resolve)\r\n            .catch(reject);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/services/API.js","/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\n * Copyright (C) 2017 Luke Denton\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class API\n *\n * Interface for communicating with the API\n */\nexport default class DataStore {\n\n    /**\n     * String constant for access token key\n     *\n     * @returns {string}\n     */\n    static DATA__ACCESS_TOKEN() {\n        return 'pinterest_accessToken';\n    }\n\n    static DATA__BOARDS() {\n        return 'pinterest_boards';\n    }\n\n    static DATA__IS_ADMIN() {\n        return 'bulk_pinner_admin';\n    }\n\n    /**\n     * Set value in the data store\n     *\n     * @param {string} key   The identifying key for the value\n     * @param {string} value The value for the identifying key\n     *\n     * @returns {null}\n     */\n    static Set(key, value) {\n        window.localStorage.setItem(key, value);\n    }\n\n    /**\n     * Get the value for a given key\n     *\n     * @param {string} key The identifying key for the value\n     *\n     * @returns {string}\n     */\n    static Get(key) {\n        return window.localStorage.getItem(key);\n    }\n\n    /**\n     * Remove a local storage key/value\n     *\n     * @param {string} key The identifying key to remove\n     *\n     * @returns {null}\n     */\n    static Remove(key) {\n        return window.localStorage.removeItem(key);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/services/DataStore.js","/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\n * Copyright (C) 2017 Luke Denton\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Bullet from 'bullet-pubsub';\n\n/**\n * Class Event\n *\n * Wrapper for the event library chosen, preventing the application from being tightly coupled to the library\n *\n * This class will only be used for custom events. Events like click, hover etc will be handled by vanilla JS handlers\n */\nexport default class CustomEvent {\n\n    /**\n     * Wrapper for the .on event listener\n     *\n     * @param {string}   eventName The name of the event to listen for\n     * @param {function} callback  The function to execute when the event is detected\n     *\n     * @returns {null}\n     */\n    static on(eventName, callback) {\n        Bullet.on(eventName, callback, false);\n    }\n\n    /**\n     * Wrapper for the .off function\n     *\n     * @param {string}   eventName The name of the event to remove\n     * @param {function} callback  [Optional] The function to remove. If the event listener needs to remain for some instances.\n     *\n     * @returns {null}\n     */\n    static off(eventName, callback) {\n        Bullet.off(eventName, callback);\n    }\n\n    /**\n     * Wrapper for the .once event listener.\n     * This listener will only be triggered once, and then removed\n     *\n     * @param {string}   eventName The name of the event to listen for\n     * @param {function} callback  The function to execute when event is detected\n     *\n     * @returns {null}\n     */\n    static once(eventName, callback) {\n        Bullet.once(eventName, callback);\n    }\n\n    /**\n     * Wrapper for the .trigger function, that will trigger an event\n     *\n     * @param {string} eventName The name of the event to trigger\n     * @param {Object} data      [Optional] Custom data to pass to the event listener callback\n     *\n     * @returns {null}\n     */\n    static trigger(eventName, data = {}) {\n        Bullet.trigger(eventName, data)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/services/CustomEvent.js","/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\r\n * Copyright (C) 2017 Luke Denton\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation; either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\nimport ErrorUtil from 'services/ErrorUtil';\r\nimport Analytics from 'services/Analytics';\r\nimport API from 'services/API';\r\n\r\n/**\r\n * Class PinPreview\r\n */\r\nexport default class PinPreview {\r\n\r\n    constructor(file) {\r\n        this.file = file;\r\n\r\n        let name = this.file.name.split('.');\r\n        // Remove the extension from the filename array\r\n        name.pop();\r\n        // Re-join the remaining elements in the filename array, in case the filename itself had other fullstops in it\r\n        this.name = name.join('.');\r\n    }\r\n\r\n    /**\r\n     * Save the instance of the pin preview element that has been imported into the DOM\r\n     *\r\n     * @param instance\r\n     *\r\n     * @returns {PinPreview}\r\n     */\r\n    setInstance(instance) {\r\n        this.instance          = instance;\r\n        this.actionMenuTrigger = this.instance.querySelector('.preview-action-btn');\r\n        this.actionMenu        = this.instance.querySelector('.preview-actions');\r\n        this.note              = this.instance.querySelector('#note');\r\n        this.link              = this.instance.querySelector('.link');\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Attach event listeners to various elements in the Pin Preview\r\n     *\r\n     * @returns {null}\r\n     */\r\n    attachListeners() {\r\n\r\n        // Event listener to show/hide the actions menu\r\n        this.actionMenuTrigger.addEventListener('click', e => {\r\n            if (!this.isActionMenuVisible()) {\r\n                this.showPreviewActions();\r\n            } else {\r\n                this.hidePreviewActions();\r\n            }\r\n        });\r\n\r\n        // Event listener to populate the note with the name of the file being pinned\r\n        this.actionMenu.querySelector('.preview-action').addEventListener('click', e => {\r\n            switch (e.target.dataset.action) {\r\n                case 'filename':\r\n                    this.setNote(this.name);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Show the preview actions menu for the current Pin Preview\r\n     *\r\n     * @returns {null}\r\n     */\r\n    showPreviewActions() {\r\n        this.actionMenu.classList.add('is-visible');\r\n    }\r\n\r\n    /**\r\n     * Hide the preview actions menu for the current Pin Preview\r\n     *\r\n     * @returns {null}\r\n     */\r\n    hidePreviewActions() {\r\n        this.actionMenu.classList.remove('is-visible');\r\n    }\r\n\r\n    /**\r\n     * Determine if the action menu for this PinPreview class is showing\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isActionMenuVisible() {\r\n        return this.actionMenu.classList.contains('is-visible');\r\n    }\r\n\r\n    /**\r\n     * Determine if this pin preview has been sent to Pinterest\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isPinned() {\r\n        return !!this.instance.dataset.pinned || false;\r\n    }\r\n\r\n    /**\r\n     * Set value for the note textarea\r\n     *\r\n     * @param {string} value The new value for the note\r\n     *\r\n     * @returns {null}\r\n     */\r\n    setNote(value) {\r\n        this.note.value = value;\r\n    }\r\n\r\n    /**\r\n     * Set value for link\r\n     *\r\n     * @param {string} link The value to be set for the link field\r\n     *\r\n     * @returns {null}\r\n     */\r\n    setLink(link) {\r\n        this.link.value = link;\r\n    }\r\n\r\n    /**\r\n     * Render a pin preview template instance\r\n     *\r\n     * @returns {Node}\r\n     */\r\n    render() {\r\n        const template = document.getElementById('preview-template');\r\n        const instance = document.importNode(template.content, true);\r\n\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (theFile => {\r\n            const previewContainer = theFile.querySelector('.preview-container');\r\n            const previewImage = previewContainer.querySelector(\".preview-image\");\r\n\r\n            return e => {\r\n                previewImage.src = e.target.result;\r\n                previewImage.classList.toggle('loaded', true);\r\n            };\r\n        })(instance);\r\n\r\n        reader.abort();\r\n        reader.readAsDataURL(this.file);\r\n\r\n        return instance;\r\n    }\r\n\r\n    /**\r\n     * Send request to Pinterest to pin this image\r\n     *\r\n     * @returns {null}\r\n     */\r\n    createPin() {\r\n        const imageData = this.instance.querySelector('.preview-image').src;\r\n        const note      = this.instance.querySelector(\".note\").value;\r\n        const board     = this.instance.querySelector(\".board-names\").value;\r\n        const link      = this.instance.querySelector(\".link\").value;\r\n\r\n        this.instance.classList.toggle('sending', true);\r\n        if (typeof this.instance.dataset.pinError !== 'undefined') {\r\n            delete this.instance.dataset.pinError; // Remove any previous error that might be displaying\r\n        }\r\n\r\n        try {\r\n            API.CreatePin({\r\n                board: board, // Sending just the board ID. Documentation doesn't say this can be done, but it works. Reason is: spaces in board names\r\n                image_base64: imageData,\r\n                note: note,\r\n                link: link\r\n            })\r\n                .then(response => {\r\n                    this.instance.dataset.pinned = true;\r\n                    this.instance.classList.toggle('sending', false);\r\n                    Analytics.PinCreated();\r\n                })\r\n                .catch(err => {\r\n                    ErrorUtil.Log(new Error('Create Pin promise rejected'), {\r\n                        error: err,\r\n                        severity: 'error'\r\n                    });\r\n                });\r\n        } catch (exception) {\r\n            ErrorUtil.Log(new Error('Exception thrown from CreatePin function'), {\r\n                metaData: {\r\n                    'details': exception\r\n                },\r\n                severity: 'error'\r\n            });\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/PinPreview.js","/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\r\n * Copyright (C) 2017 Luke Denton\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation; either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\nimport DataStore from 'services/DataStore';\r\n\r\n/**\r\n * Class Analytics\r\n */\r\nexport default class Analytics {\r\n\r\n    /**\r\n     * Perform analytics tracking actions relative to a pin being created\r\n     *\r\n     * @returns {null}\r\n     */\r\n    static PinCreated() {\r\n        Analytics.FireEvent('pin_created', {\r\n            'event_category': 'pins'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fire an event to help track which features are used\r\n     *\r\n     * @param {string} shortcutName The label of the shortcut that was used\r\n     *\r\n     * @returns {null}\r\n     */\r\n    static KeyboardShortcutUsed(shortcutName) {\r\n        Analytics.FireEvent(shortcutName, {\r\n            'event_category': 'keyboard_shortcuts'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fire an event to help track which features are used\r\n     *\r\n     * @param {string} featureName The label of the feature that was used\r\n     *\r\n     * @returns {null}\r\n     */\r\n    static FeatureUsed(featureName) {\r\n        Analytics.FireEvent(featureName, {\r\n            'event_category': 'features'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fire an event on Google Analytics\r\n     *\r\n     * @param {string} eventAction  The 'action' of the event to creation\r\n     * @param {Object} eventOptions Extra options to send with the event action\r\n     *\r\n     * @returns {null}\r\n     */\r\n    static FireEvent(eventAction, eventOptions) {\r\n        if (DataStore.Get(DataStore.DATA__IS_ADMIN) === null) {\r\n            gtag('event', eventAction, eventOptions);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/services/Analytics.js","/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\n * Copyright (C) 2017 Luke Denton\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Authorization from 'views/Authorization';\nimport Application from 'views/Application';\nimport API from 'services/API';\nimport CustomEvent from 'services/CustomEvent';\n\n// If the user is using Internet Explorer, kindly let them know that their browser is out of date, and that they should update\nif (window.navigator.userAgent.indexOf(\"MSIE\") > 0 || !!navigator.userAgent.match(/Trident\\/7\\./)) {\n    document.querySelector('body').classList.add('no-scroll');\n    document.querySelector('.modal-overlay').classList.remove('hidden');\n    document.querySelector('.modal-overlay').classList.add('ie-overlay');\n    document.querySelector('.modal-overlay').querySelector('.internet-explorer-disabled').classList.remove('hidden');\n} else {\n    // Create instances of application classes\n    new Authorization();\n    new Application();\n\n    // Determine if used is logged in and publish appropriate status\n    if (!API.IsAuthenticated()) {\n        CustomEvent.trigger('user-not-authenticated');\n    } else {\n        CustomEvent.trigger('user-authenticated');\n    }\n\n    const bugsnagOptions = {\n        apiKey: '856ea8cf87049704dbad28042ef0aa16',\n        appVersion: '0.5.5',\n        releaseStage: 'production',\n        notifyReleaseStages: ['production', 'staging'],\n        collectUserIp: false\n    };\n\n    if (window.location.origin !== 'https://bulkpinner.github.io') {\n        bugsnagOptions.releaseStage = 'developer';\n    }\n\n    window.bugsnagClient = bugsnag(bugsnagOptions)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","(function () {\n\n    'use strict';\n    \n    function Bullet ()\n    {\n        // ------------------------------------------------------------------------------------------\n        // -- Custom Errors\n        // ------------------------------------------------------------------------------------------\n        function ParamCountError (methodName, expectedParamsString, paramCount) {\n            \n            this.message = 'Bullet:: [' + methodName + '] ' + expectedParamsString + ', but received: ' + paramCount;\n            var error = new Error(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        ParamCountError.prototype = new Error();\n        ParamCountError.prototype.name = ParamCountError.name;\n        ParamCountError.prototype.constructor = ParamCountError;\n\n        function ParamTypeError (methodName, parameterName, parameter, expectedType) {\n            \n            this.message = 'Bullet:: [' + methodName + '] Expected parameter - ' + parameterName + ' - to be type: ' + expectedType + ', but received type: ' + typeof parameter;\n            var error = new TypeError(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        ParamTypeError.prototype = new TypeError();\n        ParamTypeError.prototype.name = ParamTypeError.name;\n        ParamTypeError.prototype.constructor = ParamTypeError;\n\n        function EventNameLengthError (methodName) {\n            \n            this.message = 'Bullet:: [' + methodName + '] Expected event name parameter to be longer than 0 characters';\n            var error = new Error(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        EventNameLengthError.prototype = new Error();\n        EventNameLengthError.prototype.name = EventNameLengthError.name;\n        EventNameLengthError.prototype.constructor = EventNameLengthError;\n\n        function EventNamesArrayLengthError (methodName) {\n            \n            this.message = 'Bullet:: [' + methodName + '] Expected event names array to contain one or more event names';\n            var error = new Error(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        EventNamesArrayLengthError.prototype = new Error();\n        EventNamesArrayLengthError.prototype.name = EventNamesArrayLengthError.name;\n        EventNamesArrayLengthError.prototype.constructor = EventNamesArrayLengthError;\n\n        function UndeclaredEventError (methodName, eventName) {\n            \n            this.message = 'Bullet:: [' + methodName + '] Event string: \"' + eventName + '\" does not exist within the events dictionary\\nPlease use the Bullet.addEventName method to add this string.';\n\n            var error = new Error(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        UndeclaredEventError.prototype = new Error();\n        UndeclaredEventError.prototype.name = UndeclaredEventError.name;\n        UndeclaredEventError.prototype.constructor = UndeclaredEventError;\n\n\n        function UnmappedEventError (methodName, eventName) {\n            \n            this.message = 'Bullet:: [' + methodName + '] Event string: \"' + eventName + '\" is not mapped to any callbacks\\nPlease use the Bullet.on method to map this string to a callback.';\n\n            var error = new Error(this.message);\n            if (typeof error.stack !== 'undefined') this.stack = error.stack;\n        }\n        UnmappedEventError.prototype = new Error();\n        UnmappedEventError.prototype.name = UnmappedEventError.name;\n        UnmappedEventError.prototype.constructor = UnmappedEventError;\n\n        var _CALLBACK_NAMESPACE = '__bullet_pubsub__';\n        // ------------------------------------------------------------------------------------------\n        // -- Private variables\n        // ------------------------------------------------------------------------------------------\n        var _self = this;\n        var _mappings = {};\n        var _strictMode = false;\n        var _triggerAsync = true;\n\n        // Expose custom error type constructors (for testing), but use an underscore to imply privacy.\n        _self._errors = {\n            ParamCountError : ParamCountError,\n            ParamTypeError : ParamTypeError,\n            EventNameLengthError : EventNameLengthError,\n            EventNamesArrayLengthError: EventNamesArrayLengthError,\n            UndeclaredEventError : UndeclaredEventError,\n            UnmappedEventError : UnmappedEventError,\n        };\n\n\n        // ------------------------------------------------------------------------------------------\n        // -- Public variables\n        // ------------------------------------------------------------------------------------------\n        _self.events = {};\n\n\n        // ------------------------------------------------------------------------------------------\n        // -- Private methods\n        // ------------------------------------------------------------------------------------------\n        function _runCallback (eventName, data) {\n            for (var id in _mappings[eventName].callbacks)\n            {\n                var callbackObject = _mappings[eventName].callbacks[id];\n\n                if (typeof callbackObject.cb === 'function') callbackObject.cb(data);\n                if (typeof callbackObject.once === 'boolean' && callbackObject.once === true) _self.off(eventName, callbackObject.cb);\n            }\n        }\n\n        function _cloneCallbacks (callbacks) {\n            var clonedCallbacks = {};\n\n            for (var callbackName in callbacks) {\n                \n                clonedCallbacks[callbackName] = {\n                    cb : callbacks[callbackName].cb,\n                    once : callbacks[callbackName].once\n                };\n            }\n\n            return clonedCallbacks;\n        }\n\n        function _deleteAllCallbackReferencesForEvent (eventName)\n        {\n            for (var id in _mappings[eventName].callbacks)\n            {\n                var callback = _mappings[eventName].callbacks[id].cb;\n\n                callback[_CALLBACK_NAMESPACE].totalEvents--;\n\n                if (callback[_CALLBACK_NAMESPACE].totalEvents === 0)\n                {\n                    delete callback[_CALLBACK_NAMESPACE];\n                }\n                else\n                {\n                    delete callback[_CALLBACK_NAMESPACE][eventName];\n                }\n            }\n        }\n\n        function _deleteAllCallbackReferences ()\n        {\n            for (var eventName in _mappings)\n            {\n                _deleteAllCallbackReferencesForEvent(eventName);\n            }\n        }\n\n        // Expose _getMappings method (for testing), but use an underscore to imply privacy.\n        _self._getMappings = function () {\n            \n            // Return a dictionary object that has no effect on app state to ensure '_mappings'\n            // stays private, even if the value returned from this method is modified.\n            var clonedMappings = {};\n\n            for (var mapping in _mappings)\n            {             \n                clonedMappings[mapping] = {\n                    callbacks : _cloneCallbacks(_mappings[mapping].callbacks),\n                    totalCallbacks : _mappings[mapping].totalCallbacks\n                };\n            }\n\n            return clonedMappings;\n        };\n\n\n        // ------------------------------------------------------------------------------------------\n        // -- Public methods\n        // ------------------------------------------------------------------------------------------\n        _self.on = function (eventName, fn, once)\n        {\n            if (arguments.length < 2 || arguments.length > 3)\n            {\n                throw new ParamCountError('on', 'Expected between 2 and 3 parameters', arguments.length);\n            }\n\n            if (typeof eventName !== 'string')\n            {\n                throw new ParamTypeError('on', 'event name', eventName, 'string');\n            }\n            else if (eventName.length === 0)\n            {\n                throw new EventNameLengthError('on');\n            }\n            else if (_strictMode && typeof _self.events[eventName] === 'undefined')\n            {\n                throw new UndeclaredEventError('on', eventName);\n            }\n\n            if (typeof fn !== 'function')\n            {\n                throw new ParamTypeError('on', 'callback', fn, 'function');\n            }\n\n            if (typeof once !== 'undefined' && typeof once !== 'boolean')\n            {\n                throw new ParamTypeError('on', 'once', once, 'boolean');\n            }\n\n            // Create a reference between the callback and stored event.\n            var callbackId = null;\n\n            // If the named event object already exists in the dictionary...\n            if (typeof _mappings[eventName] !== 'undefined')\n            {\n                // Attempt to get the callback ID from the callback itself.\n                if (typeof fn[_CALLBACK_NAMESPACE] === 'undefined')\n                {\n                    fn[_CALLBACK_NAMESPACE] = {\n                        totalEvents: 0\n                    };\n                }\n                \n                // Add a new callback object to the existing event object.\n                if (typeof fn[_CALLBACK_NAMESPACE][eventName] === 'undefined')\n                {\n                    callbackId = _mappings[eventName].totalCallbacks;\n\n                    _mappings[eventName].totalCallbacks++;\n\n                    _mappings[eventName].callbacks[callbackId] = {\n                        cb : fn,\n                        once : typeof once === 'boolean' ? once : false\n                    };\n\n                    // On the callback, create a reference to the event mapping.\n                    fn[_CALLBACK_NAMESPACE][eventName] = callbackId;\n                    fn[_CALLBACK_NAMESPACE].totalEvents++;\n                }\n\n                if (typeof once === 'boolean')\n                {\n                    // Get the callback ID from the value of the existing event name key.\n                    callbackId = fn[_CALLBACK_NAMESPACE][eventName];\n\n                    // The function already exists, so update it's 'once' value.\n                    _mappings[eventName].callbacks[callbackId].once = once;\n                }\n            }\n            else\n            {\n                // Create a new event object in the dictionary with the specified name and callback.\n                _mappings[eventName] = {\n                    callbacks : {}\n                };\n\n                callbackId = 0;\n\n                _mappings[eventName].callbacks[callbackId] = {cb : fn, once : !!once};\n                _mappings[eventName].totalCallbacks = 1;\n\n                // On the callback, create a reference to the event mapping.\n                if (typeof fn[_CALLBACK_NAMESPACE] === 'undefined')\n                {\n                    fn[_CALLBACK_NAMESPACE] = {};\n                    fn[_CALLBACK_NAMESPACE].totalEvents = 1;\n                }\n                else\n                {\n                    fn[_CALLBACK_NAMESPACE].totalEvents++;\n                }\n                \n                fn[_CALLBACK_NAMESPACE][eventName] = callbackId;\n            }\n        };\n\n        _self.once = function (eventName, fn)\n        {\n            if (arguments.length !== 2)\n            {\n                throw new ParamCountError('once', 'Expected 2 parameters', arguments.length);\n            }\n            else if (typeof eventName !== 'string')\n            {\n                throw new ParamTypeError('once', 'event name', eventName, 'string');\n            }\n            else if (eventName.length === 0)\n            {\n                throw new EventNameLengthError('once');\n            }\n            else if (_strictMode && typeof _self.events[eventName] === 'undefined')\n            {\n                throw new UndeclaredEventError('once', eventName);\n            }\n\n            if (typeof fn !== 'function')\n            {\n                throw new ParamTypeError('once', 'callback', fn, 'function');\n            }\n\n            _self.on(eventName, fn, true);\n        };\n\n        _self.off = function (eventName, fn)\n        {\n            if (arguments.length === 0)\n            {\n                // delete all references to Bullet that exist on mapped callbacks.\n                _deleteAllCallbackReferences();\n\n                // Remove all mappings from the dictionary.\n                _mappings = {};\n\n                return;\n            }\n            else if (typeof eventName !== 'string')\n            {\n                throw new ParamTypeError('off', 'event name', eventName, 'string');\n            }\n            else if (eventName.length === 0)\n            {\n                throw new EventNameLengthError('off');\n            }\n            else if (_strictMode && typeof _self.events[eventName] === 'undefined')\n            {\n                throw new UndeclaredEventError('off', eventName);\n            }\n\n            if (typeof _mappings[eventName] === 'undefined')\n            {\n                // There is no mapping to remove, so return silently.\n                return;\n            }\n\n            // Remove just the function, if passed as a parameter and in the dictionary.\n            if (typeof fn === 'function')\n            {\n                // if (typeof fn[_CALLBACK_NAMESPACE] === 'undefined' || typeof fn[_CALLBACK_NAMESPACE][eventName] === 'undefined')\n                // {\n                //     // TODO: Throw error here if in strict mode.\n                // }\n\n                // Retrieve a reference to the stored event from the callback.\n                var id = fn[_CALLBACK_NAMESPACE][eventName];\n                var fnToRemove = _mappings[eventName].callbacks[id];\n\n                if (typeof fnToRemove !== 'undefined')\n                {\n                    // delete the callback object from the dictionary.\n                    delete _mappings[eventName].callbacks[id];\n\n                    // delete the event reference on the callback function.\n                    delete fn[_CALLBACK_NAMESPACE][eventName];\n\n                    _mappings[eventName].totalCallbacks--;\n                    fn[_CALLBACK_NAMESPACE].totalEvents--;\n\n                    if (_mappings[eventName].totalCallbacks === 0)\n                    {\n                        // There are no more functions in the dictionary that are\n                        // registered to this event, so delete the named event object.\n                        delete _mappings[eventName];\n                    }\n\n                    if (fn[_CALLBACK_NAMESPACE].totalEvents === 0)\n                    {\n                        // There are no more events registered on this callback,\n                        // so delete the Bullet namespace.\n                        delete fn[_CALLBACK_NAMESPACE];\n                    }\n                }\n            }\n            else if (typeof fn !== 'undefined')\n            {\n                throw new ParamTypeError('off', 'callback', fn, 'function');\n            }\n            else\n            {\n                // No callback was passed to the 'off' method...\n\n                // For each callback in _mappings[eventName], delete the reference to\n                // the specified event name on the callback itself.\n                _deleteAllCallbackReferencesForEvent(eventName);\n\n                // Delete all functions in the dictionary that are registered to this\n                // event by deleting the named event object.\n                delete _mappings[eventName];\n            }\n        };\n\n        // Replace a single mapped callback for the specified event name with a new callback.\n        _self.replaceCallback = function (eventName, oldFn, newFn, once) {\n\n            if (typeof eventName !== 'string')\n            {\n                throw new ParamTypeError('replaceCallback', 'event name', eventName, 'string');\n            }\n            else if (eventName.length === 0)\n            {\n                throw new EventNameLengthError('replaceCallback');\n            }\n            else if (typeof _mappings[eventName] === 'undefined')\n            {\n                throw new UnmappedEventError('replaceCallback', eventName);\n            }\n            else if (_strictMode && typeof _self.events[eventName] === 'undefined')\n            {\n                throw new UndeclaredEventError('replaceCallback', eventName);\n            }\n\n            if (typeof oldFn !== 'function')\n            {\n                throw new ParamTypeError('replaceCallback', 'callback', oldFn, 'function');\n            }\n\n            if (typeof newFn !== 'function')\n            {\n                throw new ParamTypeError('replaceCallback', 'callback', newFn, 'function');\n            }\n\n            if (typeof once !== 'undefined' && typeof once !== 'boolean')\n            {\n                throw new ParamTypeError('replaceCallback', 'once', once, 'boolean');\n            }\n            \n            _self.off(eventName, oldFn);\n            _self.on(eventName, newFn, once);\n        };\n\n        // Replace all of the specified event name’s mapped callbacks with the specified callback.\n        _self.replaceAllCallbacks = function (eventName, newFn, once) {\n\n            if (typeof eventName !== 'string')\n            {\n                throw new ParamTypeError('replace', 'event name', eventName, 'string');\n            }\n            else if (eventName.length === 0)\n            {\n                throw new EventNameLengthError('replace');\n            }\n            else if (typeof _mappings[eventName] === 'undefined')\n            {\n                throw new UnmappedEventError('replace', eventName);\n            }\n            else if (_strictMode && typeof _self.events[eventName] === 'undefined')\n            {\n                throw new UndeclaredEventError('replace', eventName);\n            }\n\n            if (typeof newFn !== 'function')\n            {\n                throw new ParamTypeError('replace', 'callback', newFn, 'function');\n            }\n\n            if (typeof once !== 'undefined' && typeof once !== 'boolean')\n            {\n                throw new ParamTypeError('replace', 'once', once, 'boolean');\n            }\n            \n            _self.off(eventName);\n            _self.on(eventName, newFn, once);\n        };\n\n        _self.trigger = function (eventName, data)\n        {\n            if (typeof eventName !== 'string')\n            {\n                throw new ParamTypeError('trigger', 'event name', eventName, 'string');\n            }\n            else if (eventName.length === 0)\n            {\n                throw new EventNameLengthError('trigger');\n            }\n            else if (_strictMode && typeof _self.events[eventName] === 'undefined')\n            {\n                throw new UndeclaredEventError('trigger', eventName);\n            }\n            \n            if (typeof _mappings[eventName] === 'undefined')\n            {\n                if (_strictMode) throw new UnmappedEventError('trigger', eventName);\n\n                // Return silently if not in strict mode.\n                return;\n            }\n\n            // Check whether or not this is a browser environment.\n            if (_triggerAsync && typeof window !== 'undefined')\n            {\n                window.setTimeout(function(){\n                    _runCallback(eventName, data);\n                }, 0);\n            }\n            else\n            {\n                _runCallback(eventName, data);\n            }\n        };\n\n        _self.addEventName = function (eventName) {\n\n            if (typeof eventName !== 'string')\n            {\n                throw new ParamTypeError('addEventName', 'event name', eventName, 'string');\n            }\n            else if (eventName.length === 0)\n            {\n                throw new EventNameLengthError('addEventName');\n            }\n\n            _self.events[eventName] = eventName;\n        };\n\n        _self.addMultipleEventNames = function (eventNames) {\n            \n            if (!(eventNames instanceof Array))\n            {\n                throw new ParamTypeError('addMultipleEventNames', 'event names', eventNames, 'array');\n            }\n            else if (eventNames.length === 0)\n            {\n                throw new EventNamesArrayLengthError('addMultipleEventNames');\n            }\n\n            var i = 0;\n            var length = eventNames.length;\n\n            for(i; i < length; i++) {\n                var currentEventName = eventNames[i];\n                \n                _self.addEventName(currentEventName);\n            }\n        }\n\n        _self.removeEventName = function (eventName) {\n\n            if (typeof eventName !== 'string')\n            {\n                throw new ParamTypeError('removeEventName', 'event name', eventName, 'string');\n            }\n             else if (eventName.length === 0)\n            {\n                throw new EventNameLengthError('removeEventName');\n            }\n\n            if (_self.events[eventName]) delete _self.events[eventName];\n        };\n\n        _self.getStrictMode = function () {\n\n            // Return a boolean that doesn't directly point to the internal '_strictMode' property.\n            return _strictMode === true ? true : false;\n        };\n\n        _self.setStrictMode = function (useStrictMode) {\n\n            if (typeof useStrictMode !== 'boolean') throw new ParamTypeError('setStrictMode', 'strict mode', useStrictMode, 'boolean');\n\n            _strictMode = useStrictMode;\n        };\n\n        _self.getTriggerAsync = function () {\n\n            // Return a boolean that doesn't directly point to the internal '_triggerAsync' property.\n            return _triggerAsync === true ? true : false;\n        };\n\n        _self.setTriggerAsync = function (useAsync) {\n\n            if (typeof useAsync !== 'boolean') throw new ParamTypeError('setTriggerAsync', 'trigger async', useAsync, 'boolean');\n\n            _triggerAsync = useAsync;\n        };\n\n        // TODO : Create an 'addMultipleEventNames' method with an array of strings passed as a param.\n        // - include type checks for string while looping over the array.\n\n        // TODO : Create a 'replaceAllEventNames' method with an array of strings passed as a param.\n        // - include type checks for string while looping over the array.\n\n        // TODO : Create a 'removeAllEventNames' method. No params necessary.\n        // – Internally this could simply call 'replaceAllEventNames' and pass an empty array as a param.\n\n        // TODO : Create an 'onAny' method with an array of strings passed as the first param and a single callback as the second.\n        // - include type checks for string while looping over the array.\n\n        // TODO : Create an 'onMultiple' method with an array of flat objects passed as a param.\n        // - example of required param structure:\n        // [{eventName: 'someEvent', callback: someCallback, once: false}, {eventName: 'anotherEvent', callback: anotherCallback, once: true}]\n    }\n\n\n    // ------------------------------------------------------------------------------------------\n    // -- Module definition\n    // ------------------------------------------------------------------------------------------\n    // Check for AMD/Module support, otherwise define Bullet as a global variable.\n\n    if (typeof define !== 'undefined' && define.amd)\n    {\n        // AMD. Register as an anonymous module.\n        define (function()\n        {\n            return new Bullet();\n        });\n\n    }\n    else if (typeof module !== 'undefined' && module.exports)\n    {\n        module.exports = new Bullet();\n    }\n    else\n    {\n        window.Bullet = new Bullet();\n    }\n    \n})();\n\n\n// WEBPACK FOOTER //\n// ./~/bullet-pubsub/dist/bullet.js","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/debounce/index.js","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.1\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n\n\n\n// WEBPACK FOOTER //\n// ./~/mousetrap/mousetrap.js","var type = require('type-of');\n\nvar jsonpID = 0,\n    document = window.document,\n    key,\n    name,\n    rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n    scriptTypeRE = /^(?:text|application)\\/javascript/i,\n    xmlTypeRE = /^(?:text|application)\\/xml/i,\n    jsonType = 'application/json',\n    htmlType = 'text/html',\n    blankRE = /^\\s*$/\n\nvar ajax = module.exports = function(options){\n  var settings = extend({}, options || {})\n  for (key in ajax.settings) if (settings[key] === undefined) settings[key] = ajax.settings[key]\n\n  ajaxStart(settings)\n\n  if (!settings.crossDomain) settings.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(settings.url) &&\n    RegExp.$2 != window.location.host\n\n  var dataType = settings.dataType, hasPlaceholder = /=\\?/.test(settings.url)\n  if (dataType == 'jsonp' || hasPlaceholder) {\n    if (!hasPlaceholder) settings.url = appendQuery(settings.url, 'callback=?')\n    return ajax.JSONP(settings)\n  }\n\n  if (!settings.url) settings.url = window.location.toString()\n  serializeData(settings)\n\n  var mime = settings.accepts[dataType],\n      baseHeaders = { },\n      protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n      xhr = ajax.settings.xhr(), abortTimeout\n\n  if (!settings.crossDomain) baseHeaders['X-Requested-With'] = 'XMLHttpRequest'\n  if (mime) {\n    baseHeaders['Accept'] = mime\n    if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n    xhr.overrideMimeType && xhr.overrideMimeType(mime)\n  }\n  if (settings.contentType || (settings.data && settings.type.toUpperCase() != 'GET'))\n    baseHeaders['Content-Type'] = (settings.contentType || 'application/x-www-form-urlencoded')\n  settings.headers = extend(baseHeaders, settings.headers || {})\n\n  xhr.onreadystatechange = function(){\n    if (xhr.readyState == 4) {\n      clearTimeout(abortTimeout)\n      var result, error = false\n      if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n        dataType = dataType || mimeToDataType(xhr.getResponseHeader('content-type'))\n        result = xhr.responseText\n\n        try {\n          if (dataType == 'script')    (1,eval)(result)\n          else if (dataType == 'xml')  result = xhr.responseXML\n          else if (dataType == 'json') result = blankRE.test(result) ? null : JSON.parse(result)\n        } catch (e) { error = e }\n\n        if (error) ajaxError(error, 'parsererror', xhr, settings)\n        else ajaxSuccess(result, xhr, settings)\n      } else {\n        ajaxError(null, 'error', xhr, settings)\n      }\n    }\n  }\n\n  var async = 'async' in settings ? settings.async : true\n  xhr.open(settings.type, settings.url, async)\n\n  for (name in settings.headers) xhr.setRequestHeader(name, settings.headers[name])\n\n  if (ajaxBeforeSend(xhr, settings) === false) {\n    xhr.abort()\n    return false\n  }\n\n  if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n      xhr.onreadystatechange = empty\n      xhr.abort()\n      ajaxError(null, 'timeout', xhr, settings)\n    }, settings.timeout)\n\n  // avoid sending empty string (#319)\n  xhr.send(settings.data ? settings.data : null)\n  return xhr\n}\n\n\n// trigger a custom event and return false if it was cancelled\nfunction triggerAndReturn(context, eventName, data) {\n  //todo: Fire off some events\n  //var event = $.Event(eventName)\n  //$(context).trigger(event, data)\n  return true;//!event.defaultPrevented\n}\n\n// trigger an Ajax \"global\" event\nfunction triggerGlobal(settings, context, eventName, data) {\n  if (settings.global) return triggerAndReturn(context || document, eventName, data)\n}\n\n// Number of active Ajax requests\najax.active = 0\n\nfunction ajaxStart(settings) {\n  if (settings.global && ajax.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n}\nfunction ajaxStop(settings) {\n  if (settings.global && !(--ajax.active)) triggerGlobal(settings, null, 'ajaxStop')\n}\n\n// triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\nfunction ajaxBeforeSend(xhr, settings) {\n  var context = settings.context\n  if (settings.beforeSend.call(context, xhr, settings) === false ||\n      triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n    return false\n\n  triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n}\nfunction ajaxSuccess(data, xhr, settings) {\n  var context = settings.context, status = 'success'\n  settings.success.call(context, data, status, xhr)\n  triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n  ajaxComplete(status, xhr, settings)\n}\n// type: \"timeout\", \"error\", \"abort\", \"parsererror\"\nfunction ajaxError(error, type, xhr, settings) {\n  var context = settings.context\n  settings.error.call(context, xhr, type, error)\n  triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error])\n  ajaxComplete(type, xhr, settings)\n}\n// status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\nfunction ajaxComplete(status, xhr, settings) {\n  var context = settings.context\n  settings.complete.call(context, xhr, status)\n  triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n  ajaxStop(settings)\n}\n\n// Empty function, used as default callback\nfunction empty() {}\n\najax.JSONP = function(options){\n  if (!('type' in options)) return ajax(options)\n\n  var callbackName = 'jsonp' + (++jsonpID),\n    script = document.createElement('script'),\n    abort = function(){\n      //todo: remove script\n      //$(script).remove()\n      if (callbackName in window) window[callbackName] = empty\n      ajaxComplete('abort', xhr, options)\n    },\n    xhr = { abort: abort }, abortTimeout,\n    head = document.getElementsByTagName(\"head\")[0]\n      || document.documentElement\n\n  if (options.error) script.onerror = function() {\n    xhr.abort()\n    options.error()\n  }\n\n  window[callbackName] = function(data){\n    clearTimeout(abortTimeout)\n      //todo: remove script\n      //$(script).remove()\n    delete window[callbackName]\n    ajaxSuccess(data, xhr, options)\n  }\n\n  serializeData(options)\n  script.src = options.url.replace(/=\\?/, '=' + callbackName)\n\n  // Use insertBefore instead of appendChild to circumvent an IE6 bug.\n  // This arises when a base node is used (see jQuery bugs #2709 and #4378).\n  head.insertBefore(script, head.firstChild);\n\n  if (options.timeout > 0) abortTimeout = setTimeout(function(){\n      xhr.abort()\n      ajaxComplete('timeout', xhr, options)\n    }, options.timeout)\n\n  return xhr\n}\n\najax.settings = {\n  // Default type of request\n  type: 'GET',\n  // Callback that is executed before request\n  beforeSend: empty,\n  // Callback that is executed if the request succeeds\n  success: empty,\n  // Callback that is executed the the server drops error\n  error: empty,\n  // Callback that is executed on request complete (both: error and success)\n  complete: empty,\n  // The context for the callbacks\n  context: null,\n  // Whether to trigger \"global\" Ajax events\n  global: true,\n  // Transport\n  xhr: function () {\n    return new window.XMLHttpRequest()\n  },\n  // MIME types mapping\n  accepts: {\n    script: 'text/javascript, application/javascript',\n    json:   jsonType,\n    xml:    'application/xml, text/xml',\n    html:   htmlType,\n    text:   'text/plain'\n  },\n  // Whether the request is to another domain\n  crossDomain: false,\n  // Default timeout\n  timeout: 0\n}\n\nfunction mimeToDataType(mime) {\n  return mime && ( mime == htmlType ? 'html' :\n    mime == jsonType ? 'json' :\n    scriptTypeRE.test(mime) ? 'script' :\n    xmlTypeRE.test(mime) && 'xml' ) || 'text'\n}\n\nfunction appendQuery(url, query) {\n  return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n}\n\n// serialize payload and append it to the URL for GET requests\nfunction serializeData(options) {\n  if (type(options.data) === 'object') options.data = param(options.data)\n  if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\n    options.url = appendQuery(options.url, options.data)\n}\n\najax.get = function(url, success){ return ajax({ url: url, success: success }) }\n\najax.post = function(url, data, success, dataType){\n  if (type(data) === 'function') dataType = dataType || success, success = data, data = null\n  return ajax({ type: 'POST', url: url, data: data, success: success, dataType: dataType })\n}\n\najax.getJSON = function(url, success){\n  return ajax({ url: url, success: success, dataType: 'json' })\n}\n\nvar escape = encodeURIComponent\n\nfunction serialize(params, obj, traditional, scope){\n  var array = type(obj) === 'array';\n  for (var key in obj) {\n    var value = obj[key];\n\n    if (scope) key = traditional ? scope : scope + '[' + (array ? '' : key) + ']'\n    // handle data in serializeArray() format\n    if (!scope && array) params.add(value.name, value.value)\n    // recurse into nested objects\n    else if (traditional ? (type(value) === 'array') : (type(value) === 'object'))\n      serialize(params, value, traditional, key)\n    else params.add(key, value)\n  }\n}\n\nfunction param(obj, traditional){\n  var params = []\n  params.add = function(k, v){ this.push(escape(k) + '=' + escape(v)) }\n  serialize(params, obj, traditional)\n  return params.join('&').replace('%20', '+')\n}\n\nfunction extend(target) {\n  var slice = Array.prototype.slice;\n  slice.call(arguments, 1).forEach(function(source) {\n    for (key in source)\n      if (source[key] !== undefined)\n        target[key] = source[key]\n  })\n  return target\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/packing-ajax/index.js","var toString = Object.prototype.toString\r\n\r\nmodule.exports = function(val){\r\n  switch (toString.call(val)) {\r\n    case '[object Function]': return 'function'\r\n    case '[object Date]': return 'date'\r\n    case '[object RegExp]': return 'regexp'\r\n    case '[object Arguments]': return 'arguments'\r\n    case '[object Array]': return 'array'\r\n    case '[object String]': return 'string'\r\n  }\r\n\r\n  if (typeof val == 'object' && val && typeof val.length == 'number') {\r\n    try {\r\n      if (typeof val.callee == 'function') return 'arguments';\r\n    } catch (ex) {\r\n      if (ex instanceof TypeError) {\r\n        return 'arguments';\r\n      }\r\n    }\r\n  }\r\n\r\n  if (val === null) return 'null'\r\n  if (val === undefined) return 'undefined'\r\n  if (val && val.nodeType === 1) return 'element'\r\n  if (val === Object(val)) return 'object'\r\n\r\n  return typeof val\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/type-of/index.js","/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\r\n * Copyright (C) 2017 Luke Denton\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation; either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport ajax from 'packing-ajax'\r\n\r\n/**\r\n * Class AJAX\r\n *\r\n * Abstraction of all AJAX interactions\r\n */\r\nexport default class AJAX {\r\n\r\n    /**\r\n     * Class constructor\r\n     *\r\n     * @returns {null}\r\n     */\r\n    constructor() {\r\n        this.baseUrl = 'https://api.pinterest.com/';\r\n        this.apiVersion = 'v1/';\r\n    }\r\n\r\n    /**\r\n     * Build the URL of the appropriate API being called\r\n     *\r\n     * @param {string}  endpoint The API endpoint being queried\r\n     *\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    _buildUrl(endpoint) {\r\n        return this.baseUrl + this.apiVersion + endpoint;\r\n    }\r\n\r\n    /**\r\n     * Execute the API query\r\n     *\r\n     * @param {string} endpoint The API endpoint to be queried\r\n     * @param {Object} data     Any additional data required\r\n     * @param {string} type     The type of request being made. E.g. GET, POST etc\r\n     *\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _fetch(endpoint, data, type) {\r\n        return new Promise((resolve, reject) => {\r\n            const url = this._buildUrl(endpoint);\r\n\r\n            ajax({\r\n                url: url,\r\n                type: type,\r\n                dataType: 'json',\r\n                data: data,\r\n                success: (response) => {\r\n                    resolve(response);\r\n                },\r\n                error: (response) => {\r\n                    reject(response);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Helper function for performing a GET request\r\n     *\r\n     * @param {string} endpoint The API endpoint to be queried\r\n     * @param {Object} data     Additional data to be sent with the request\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static Get(endpoint, data) {\r\n        return new Promise((resolve, reject) => {\r\n            const ajax = new AJAX();\r\n            ajax._fetch(endpoint, data, 'GET')\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Helper function for performing a POST request\r\n     *\r\n     * @param {string} endpoint The API endpoint to be queried\r\n     * @param {Object} data     Additional data to be sent with the request\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    static Post(endpoint, data) {\r\n        return new Promise((resolve, reject) => {\r\n            const ajax = new AJAX();\r\n            ajax._fetch(endpoint, data, 'POST')\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/services/AJAX.js","/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\r\n * Copyright (C) 2017 Luke Denton\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation; either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n/**\r\n * Class ErrorUtil\r\n *\r\n * Interface for abstracting the error reporting service\r\n */\r\nexport default class ErrorUtil {\r\n\r\n    /**\r\n     * Log an error to the bug tracking system\r\n     *\r\n     * @param {Error}  error   A description of the error\r\n     * @param {Object} options Extra details of the error\r\n     *\r\n     * @returns {null}\r\n     */\r\n    static Log(error, options) {\r\n        if (window.location.origin === 'https://bulkpinner.github.io') {\r\n            bugsnagClient.notify(error, options);\r\n        } else {\r\n            console.error(error);\r\n            console.error(options);\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/services/ErrorUtil.js","/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\n * Copyright (C) 2017 Luke Denton\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport CustomEvent from 'services/CustomEvent';\nimport API from 'services/API';\nimport DataStore from 'services/DataStore';\nimport PinPreview from 'PinPreview';\nimport Mousetrap from 'mousetrap';\nimport debounce from 'debounce';\nimport Analytics from 'services/Analytics';\n\n/**\n * Class Application\n */\nexport default class Application {\n\n    constructor() {\n        this.previewsPinsContainer = document.querySelector('.preview-pins-container');\n        this.imageSelectContainer = document.querySelector(\".image-select-container\");\n        this.refreshBoardsButton = document.querySelector('.refresh-boards');\n        this.pinsContainer = document.querySelector('.pins-container');\n        this.sendToPinterestButton = document.querySelector('.send-to-pinterest');\n        this.sendAllToBoardSelect = document.getElementById('send-all-to-board');\n        this.fileUploadInput = document.getElementById(\"fileToUpload\");\n        this.modalOverlay = document.querySelector('.modal-overlay');\n        this.clearButton    = document.querySelector(\".clear-completed\");\n        this.clearAllButton = document.querySelector(\".clear-all\");\n        this.pinPreviews = [];\n\n        // Wait until the user is authenticated before showing the main application interface\n        CustomEvent.on('user-authenticated', () => {\n            this.init();\n        });\n    }\n\n    /**\n     * @returns {null}\n     */\n    init() {\n        this.showApplicationContainer();\n        this.attachListeners();\n        this.createKeyboardShortcuts();\n    }\n\n    /**\n     * @returns {null}\n     */\n    showApplicationContainer() {\n        this.imageSelectContainer.classList.toggle('hidden', false);\n    }\n\n    /**\n     * @returns {null}\n     */\n    hideApplicationContainer() {\n        this.imageSelectContainer.classList.toggle('hidden', true);\n    }\n\n    /**\n     * Attach event listeners\n     *\n     * @returns {null}\n     */\n    attachListeners() {\n        this.refreshBoardsButton.addEventListener('click', () => {\n            Application.ToggleActionMenu(false);\n            this.loadBoards(true)\n            .then(boards => {\n                this.populateBoardNames(boards);\n            })\n            .catch(response => {\n                console.error(response);\n            });\n            Analytics.FeatureUsed('refresh_boards');\n        });\n\n        this.clearButton.addEventListener('click', e => {\n            this.clearCompleted();\n        });\n\n        this.clearAllButton.addEventListener('click', e => {\n            this.clearAll();\n        });\n\n        this.pinsContainer.addEventListener('blur', e => {\n            if (e.target.matches('.note')) {\n                e.target.classList.toggle('invalid', e.target.value !== '');\n            }\n        });\n\n        // Event listener that will handle closing any open action menus\n        document.querySelector('body').addEventListener('click', (e) => {\n            this.pinPreviews.forEach(pinPreview => {\n                if (pinPreview.actionMenuTrigger !== e.target) {\n                    pinPreview.hidePreviewActions();\n                }\n            });\n            Application.ToggleActionMenu(false);\n        });\n\n        this.sendToPinterestButton.addEventListener('click', () => {\n            if (this.validateInputs()) {\n                this.createPins();\n            }\n        });\n\n        this.sendAllToBoardSelect.addEventListener('change', e => {\n            const boardValue = e.target.value;\n\n            if (boardValue !== '') {\n                this.updateSelectedBoards(boardValue);\n                Analytics.FeatureUsed('update_selected_boards');\n            }\n        });\n\n        this.fileUploadInput.onchange = e => this.createPinPreviews(e);\n\n        document.querySelector('.privacy-policy-link').addEventListener('click', e => {\n            this.showPrivacyPolicy();\n        });\n\n        document.querySelector('.modal-overlay').addEventListener('click', e => {\n            if (e.target.classList.contains('modal-overlay')) {\n                this.hidePrivacyPolicy();\n                this.hideKeyboardShortcuts();\n                return;\n            }\n\n            if (e.target.classList.contains('close')) {\n                this.hidePrivacyPolicy();\n                this.hideKeyboardShortcuts();\n            }\n        });\n\n        // Prepare the preview pin template with names of boards to pin to\n        this.loadBoards().then(boards => {\n            this.populateBoardNames(boards);\n        });\n\n        // Listen for scroll event to check for updating the sticky-ness of the Pin button\n        document.addEventListener('scroll', debounce(() => {\n            this.updateStickyPin();\n        }, 10, false));\n\n        document.querySelector('.action-menu-toggle').addEventListener('click', (e) => {\n            e.stopImmediatePropagation();\n            Application.ToggleActionMenu();\n        });\n\n        // @TODO This will need to be refactored - create an action menu class that will work for both the user actions and app actions\n        document.querySelector('.user-action-menu-toggle').addEventListener('click', e => {\n            document.querySelector('.user-actions-container').classList.toggle('show-menu');\n        });\n\n        document.querySelector('.user-action__disconnect').addEventListener('click', e => {\n            DataStore.Remove(DataStore.DATA__ACCESS_TOKEN());\n            DataStore.Remove(DataStore.DATA__BOARDS());\n            Analytics.FeatureUsed('disconnect_pinterest');\n            location.reload();\n        });\n    }\n\n    /**\n     * Clear preview pins that have been uploaded to pinterest\n     *\n     * @returns {null}\n     */\n    clearCompleted() {\n        const completedPins = document.querySelectorAll(\".preview-container[data-pinned='true']\");\n        this.clear(completedPins);\n        this.pinPreviews = this.pinPreviews.filter(preview => !preview.isPinned());\n    }\n\n    /**\n     * Clear all preview pins\n     *\n     * @returns {null}\n     */\n    clearAll() {\n        const previewPins = document.querySelectorAll(\".preview-container\");\n        this.clear(previewPins);\n        this.pinPreviews = [];\n    }\n\n    /**\n     * Remove elements from the DOM\n     *\n     * @param {NodeList} elements Array of elements to remove\n     */\n    clear(elements) {\n        for (let i = 0 ; i < elements.length ; i++) {\n            elements[i].remove();\n        }\n\n        if (document.querySelectorAll(\".preview-container\").length === 0) {\n            document.querySelector('.page-header').classList.toggle('large', true);\n            document.querySelector('.get-started').classList.toggle('hidden', false);\n            document.querySelector('.application-container').classList.toggle('expanded', false);\n            document.querySelector('.label-text').innerText = 'Choose Images';\n            document.querySelector('.preview-pins-container').classList.toggle('hidden', true);\n        }\n\n        this.resetSendAllToBoard();\n        Application.ToggleActionMenu(false);\n    }\n\n    /**\n     * Reset the selected value in the Send all to board drop down\n     *\n     * @returns {null}\n     */\n    resetSendAllToBoard() {\n        document.querySelector(\"#send-all-to-board\").value = \"\";\n    }\n\n    /**\n     * Assign application keyboard shortcuts\n     *\n     * @returns {null}\n     */\n    createKeyboardShortcuts() {\n        // Choose/Add more pictures to pin\n        Mousetrap.bind('a', () => {\n            document.getElementById('fileToUpload').click();\n            Analytics.KeyboardShortcutUsed('add_more');\n        });\n\n        // Clear all completed (pinned) images\n        Mousetrap.bind('p c', () => {\n            document.querySelector('.clear-completed.action-button').click();\n            Analytics.KeyboardShortcutUsed('clear_completed');\n        });\n\n        // Clean all images\n        Mousetrap.bind('p x', () => {\n            document.querySelector('.clear-all.action-button').click();\n            Analytics.KeyboardShortcutUsed('clear_all');\n        });\n\n        // Show privacy policy\n        Mousetrap.bind('p p', () => {\n            document.querySelector('.privacy-policy-link').click();\n            Analytics.KeyboardShortcutUsed('show_privacy_policy');\n        });\n\n        // Show privacy policy\n        Mousetrap.bind('esc', () => {\n            this.hideKeyboardShortcuts();\n            this.hidePrivacyPolicy();\n        });\n\n        // Autofill shortcut\n        Mousetrap.bind('> > >', () => {\n            this.autofillFields();\n            Analytics.KeyboardShortcutUsed('autofill_fields');\n        });\n\n        // Show keyboard shortcuts modal\n        Mousetrap.bind('?', () => {\n            this.showKeyboardShortcuts();\n            Analytics.KeyboardShortcutUsed('show_keyboard_shortcuts_modal');\n        });\n    }\n\n    /**\n     * Loop through the images selected and create instances of the Pin Preview class for each\n     *\n     * @param {Event} e The event object\n     *\n     * @returns {null}\n     */\n    createPinPreviews(e) {\n        const input = e.target;\n\n        if (input.files.length === 0) {\n            return;\n        }\n\n        document.querySelector('.page-header').classList.toggle('large', false);\n        document.querySelector('.get-started').classList.toggle('hidden', true);\n        document.querySelector('.application-container').classList.toggle('expanded', true);\n        document.querySelector('.label-text').innerText = 'Add More Images';\n        this.previewsPinsContainer.classList.toggle('hidden', false);\n\n        window.setTimeout(() => { // Allow time for the CSS animation to run before\n            // Set the breakpoint for the Pin button becoming sticky _after_ the header is back to it's small state\n            const scrollOffset = -20; // Padding changes from 30px top 10px, so that needs to be factored in\n            this.windowBreakpoint = Math.abs(document.querySelector('.action-toolbar').getBoundingClientRect().top - document.querySelector('body').getBoundingClientRect().top - scrollOffset);\n\n            for (let i = 0 ; i < input.files.length ; i++) {\n                let file = input.files[i];\n                let pinPreview = new PinPreview(file);\n                this.previewsPinsContainer.querySelector(\".pins-container\").appendChild(pinPreview.render());\n\n                // Grab the pin preview element that was just created and set it on the Pin Preview class\n                // Unable to use the returned value of appendChild, as it returns and empty DocumentFragment\n                let pinPreviews = this.previewsPinsContainer.querySelectorAll('.preview-container');\n                let instance = pinPreviews[(pinPreviews.length - 1)];\n                pinPreview.setInstance(instance);\n                pinPreview.attachListeners();\n\n                this.pinPreviews.push(pinPreview);\n            }\n        }, 300);\n    }\n\n    /**\n     * Load the users boards\n     *\n     * @param {Boolean} forceLoad [Optional] Indicates if the API should be queried regardless of DataStore\n     *\n     * @returns {Promise}\n     */\n    loadBoards(forceLoad = false) {\n        return new Promise((resolve, reject) => {\n            const boards = DataStore.Get(DataStore.DATA__BOARDS());\n            if (boards !== null && !forceLoad) {\n                resolve(JSON.parse(boards));\n                return;\n            }\n\n            API.Boards()\n            .then((boards) => {\n                DataStore.Set(DataStore.DATA__BOARDS(), JSON.stringify(boards));\n                resolve(boards);\n            })\n            .catch((response) => {\n                reject(response);\n            });\n        });\n    }\n\n    /**\n     * Populate the <select> of board names with the names returned from Pinterest API\n     *\n     * @param {Array} boards An array of board objects\n     *\n     * @return {null}\n     */\n    populateBoardNames(boards) {\n        const boardNames = document.getElementById('preview-template').content.querySelector(\".board-names\");\n        boardNames.innerHTML = ''; // Remove the 'Loading...' option\n\n        if (boards.length === 0) {\n            let option = this.createBoardNameOptionElement({id: '', name: `You don't have any Pinterest boards!`});\n            boardNames.appendChild(option);\n            document.querySelector(\".send-to-pinterest\").classList.toggle('hidden', true); // Can't send to pinterest as the user doesn't have any boards\n            return;\n        }\n\n        // The user may have seen the message above, gone to Pinterest to create a board, and then come back to click the Refresh Boards button\n        document.querySelector(\".send-to-pinterest\").classList.toggle('hidden', false);\n\n        for (let i = 0 ; i < boards.length ; i++) {\n            let board = boards[i];\n            let option = this.createBoardNameOptionElement(board);\n            boardNames.appendChild(option);\n        }\n\n        // Update any <select> elements in preview-containers that have already been activated from the template\n        const existingBoardNameSelectors = document.querySelectorAll('.board-names');\n        for (let i = 0 ; i < existingBoardNameSelectors.length ; i++) {\n            let select = existingBoardNameSelectors[i];\n            select.innerHTML = '';\n\n            // If the board being looped is the 'send all to board', need to add the blank option\n            if (select.id === 'send-all-to-board') {\n                let option = this.createBoardNameOptionElement({name: '---', id: ''});\n                select.appendChild(option);\n            }\n\n            for (let i = 0 ; i < boards.length ; i++) {\n                let board = boards[i];\n                let option = this.createBoardNameOptionElement(board);\n                select.appendChild(option);\n            }\n        }\n    }\n\n    /**\n     * Create a new <option> element for the provided board object\n     *\n     * @param {Object} board Object representing a Pinterest board\n     *\n     * @returns {Element}\n     */\n    createBoardNameOptionElement(board) {\n        const option = document.createElement('option');\n        option.value = board.id;\n        option.innerText = board.name;\n        return option;\n    }\n\n    /**\n     * Update the selected board in each of the pin previews to match the one selected in the\n     * Send all images to board drop down\n     *\n     * @param {int} newBoard The ID value of the board to be selected\n     */\n    updateSelectedBoards(newBoard) {\n        // Loop through all existing board name selectors and update their values to match the one just selected\n        const boardNameSelectors = document.querySelectorAll('.preview-pin-board-select');\n        for (let i = 0 ; i < boardNameSelectors.length ; i++) {\n            let boardNameSelect = boardNameSelectors[i];\n\n            boardNameSelect.value = newBoard;\n        }\n    }\n\n    /**\n     * Loop through all pin previews and make sure a note has been set\n     *\n     * If a required field isn't filled in, it will be marked as invalid, but also set up with tabIndexing,\n     * so that users can click tab to easily move between only the notes that aren't filled in yet\n     *\n     * @returns {Boolean}\n     */\n    validateInputs() {\n        const previews = document.querySelectorAll('.preview-container');\n        let error = false;\n        let tabIndex = 1;\n\n        for (let i = 0 ; i < previews.length ; i++) {\n            let preview = previews[i];\n\n            const noteContainer = preview.querySelector(\".note-container\");\n            const note = noteContainer.querySelector(\".note\").value;\n\n            if (note === '') {\n                let note = preview.querySelector('.note');\n                note.classList.toggle('invalid', true);\n                note.tabIndex = tabIndex;\n                if (tabIndex === 1) {\n                    note.focus();\n                    noteContainer.dataset.balloon = noteContainer.dataset.tooltip;\n\n                    // @todo: This needs to be cleaned up and removed from here. Also need to make sure it only triggers once\n                    note.addEventListener('blur', e => {\n                        noteContainer.removeAttribute('data-balloon');\n                    });\n                }\n                tabIndex++;\n                error = true;\n            }\n        }\n\n        return error === false;\n    }\n\n    /**\n     * Loop through all of the <img> elements, and call the API function to create a pin,\n     * with all the relevant information\n     *\n     * @returns {null}\n     */\n    createPins() {\n        for (let pinPreview of this.pinPreviews) {\n            // Skip any images that have already been pinned in this session\n            if (pinPreview.instance.dataset.pinned) {\n                continue;\n            }\n\n            pinPreview.createPin();\n        }\n    }\n\n    /**\n     * Display the privacy policy modal\n     *\n     * @returns {null}\n     */\n    showPrivacyPolicy() {\n        this.modalOverlay.classList.remove('hidden');\n        this.modalOverlay.querySelector('.privacy-policy-modal').classList.remove('hidden');\n    }\n\n    /**\n     * Hide the privacy policy modal\n     *\n     * @returns {null}\n     */\n    hidePrivacyPolicy() {\n        this.modalOverlay.classList.add('hidden');\n        this.modalOverlay.querySelector('.privacy-policy-modal').classList.add('hidden');\n    }\n\n    /**\n     * Display the keyboard shortcuts modal\n     *\n     * @returns {null}\n     */\n    showKeyboardShortcuts() {\n        this.modalOverlay.classList.remove('hidden');\n        this.modalOverlay.querySelector('.keyboard-shortcuts-modal').classList.remove('hidden');\n    }\n\n    /**\n     * Hide the keyboard shortcuts modal\n     *\n     * @returns {null}\n     */\n    hideKeyboardShortcuts() {\n        this.modalOverlay.classList.add('hidden');\n        this.modalOverlay.querySelector('.keyboard-shortcuts-modal').classList.add('hidden');\n    }\n\n    /**\n     * Auto fill the note and link fields from the first Pin Preview element, to the rest of the Pin Preview elements\n     *\n     * @returns {null}\n     */\n    autofillFields() {\n        if (this.pinPreviews.length === 0) {\n            return;\n        }\n\n        const noteField = this.pinPreviews[0].instance.querySelector(\"#note\").value;\n        const linkField = this.pinPreviews[0].instance.querySelector(\".link\").value;\n\n        for (let pinPreview of this.pinPreviews) {\n            pinPreview.setNote(noteField);\n            pinPreview.setLink(linkField);\n        }\n    }\n\n    /**\n     * Check for and enable/disable the Pin button from being sticky\n     *\n     * @returns {null}\n     */\n    updateStickyPin() {\n        if (window.pageYOffset >= this.windowBreakpoint) {\n            document.querySelector('.action-toolbar').classList.toggle('sticky', true);\n            document.querySelector('.preview-pins-container').classList.toggle('toolbar-is-sticky', true);\n        } else {\n            document.querySelector('.action-toolbar').classList.toggle('sticky', false);\n            document.querySelector('.preview-pins-container').classList.toggle('toolbar-is-sticky', false);\n        }\n    }\n\n    /**\n     * Toggle the state of the action menu\n     *\n     * @param {boolean|undefined} show [Optional] True/false to force show/hide the menu\n     *                                 No value passed and the menu will just toggle\n     *\n     * @returns {null}\n     */\n    static ToggleActionMenu(show = undefined) {\n        const actionButtons = document.querySelector('.action-buttons');\n\n        if (typeof show !== 'undefined') {\n            actionButtons.classList.toggle('show-menu', show);\n        } else {\n            actionButtons.classList.toggle('show-menu');\n        }\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/views/Application.js","/* Bulk Pinner - Create multiple pins in your Pinterest boards at once\n * Copyright (C) 2017 Luke Denton\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport CustomEvent from 'services/CustomEvent';\nimport API from 'services/API';\nimport DataStore from 'services/DataStore';\n\n/**\n * Class Authorization\n */\nexport default class Authorization {\n\n    constructor() {\n        this.authenticationContainer = document.querySelector(\".authentication-container\");\n        this.authenticationButton    = document.querySelector(\".authenticate-button\");\n\n        // Listen for the instruction that the user isn't authenticated yet\n        CustomEvent.on('user-not-authenticated', () => {\n            this.init();\n        });\n    }\n\n    /**\n     * Initialise the authorization section of the application\n     *\n     * @returns {null}\n     */\n    init() {\n        this.showAuthenticationContainer();\n        this.attachListeners();\n    }\n\n    /**\n     * @returns {null}\n     */\n    showAuthenticationContainer() {\n        this.authenticationContainer.classList.toggle('hidden', false);\n        CustomEvent.trigger('authentication-shown');\n    }\n\n    /**\n     * @returns {null}\n     */\n    hideAuthenticationContainer() {\n        this.authenticationContainer.classList.toggle('hidden', true);\n        CustomEvent.trigger('authentication-hidden');\n    }\n\n    /**\n     * Attach event listeners\n     *\n     * @returns {null}\n     */\n    attachListeners() {\n        this.authenticationButton.addEventListener('click', () => {\n            API.Login()\n            .then(({accessToken}) => {\n                DataStore.Set(DataStore.DATA__ACCESS_TOKEN(), accessToken);\n                CustomEvent.trigger('user-authenticated');\n            })\n            .catch((response) => {\n                console.error(response);\n            });\n        });\n\n        // Make sure the authentication container is hidden if the application container gets shown\n        CustomEvent.on('user-authenticated', e => {\n            this.hideAuthenticationContainer();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/views/Authorization.js"],"sourceRoot":""}